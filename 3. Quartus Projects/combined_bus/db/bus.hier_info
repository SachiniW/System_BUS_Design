|tops_combined
clock => clock.IN2
rst => rst1.IN0
rst => rst2.IN0
rst => rst3.IN0
rst_sel1 => rst1.IN1
rst_sel2 => rst2.IN1
rst_sel3 => rst3.IN1
enable1 => enable1.IN1
enable2 => enable2.IN1
enable3 => enable3.IN1
button_raw1 => button_raw1.IN1
button_raw2 => button_raw2.IN1
button_raw3 => button_raw3.IN1
switch_array[0] => switch_array[0].IN3
switch_array[1] => switch_array[1].IN3
switch_array[2] => switch_array[2].IN3
switch_array[3] => switch_array[3].IN3
switch_array[4] => switch_array[4].IN3
switch_array[5] => switch_array[5].IN3
switch_array[6] => switch_array[6].IN3
switch_array[7] => switch_array[7].IN3
mode_switch1 => mode_switch1.IN1
mode_switch2 => mode_switch2.IN1
mode_switch3 => mode_switch3.IN1
scaled_clk1 << top2:top_module_1.scaled_clk
scaled_clk2 << top2:top_module_2.scaled_clk
scaled_clk3 << top2:top_module_3.scaled_clk
display1_pin[0] << <GND>
display1_pin[1] << <GND>
display1_pin[2] << <GND>
display1_pin[3] << <GND>
display1_pin[4] << <GND>
display1_pin[5] << <GND>
display1_pin[6] << <GND>
display2_pin[0] << <GND>
display2_pin[1] << <GND>
display2_pin[2] << <GND>
display2_pin[3] << <GND>
display2_pin[4] << <GND>
display2_pin[5] << <GND>
display2_pin[6] << <GND>
display3_pin[0] << top2:top_module_3.display1_pin
display3_pin[1] << top2:top_module_3.display1_pin
display3_pin[2] << top2:top_module_3.display1_pin
display3_pin[3] << top2:top_module_3.display1_pin
display3_pin[4] << top2:top_module_3.display1_pin
display3_pin[5] << top2:top_module_3.display1_pin
display3_pin[6] << top2:top_module_3.display1_pin
display4_pin[0] << top2:top_module_3.display2_pin
display4_pin[1] << top2:top_module_3.display2_pin
display4_pin[2] << top2:top_module_3.display2_pin
display4_pin[3] << top2:top_module_3.display2_pin
display4_pin[4] << top2:top_module_3.display2_pin
display4_pin[5] << top2:top_module_3.display2_pin
display4_pin[6] << top2:top_module_3.display2_pin
display5_pin[0] << top2:top_module_2.display1_pin
display5_pin[1] << top2:top_module_2.display1_pin
display5_pin[2] << top2:top_module_2.display1_pin
display5_pin[3] << top2:top_module_2.display1_pin
display5_pin[4] << top2:top_module_2.display1_pin
display5_pin[5] << top2:top_module_2.display1_pin
display5_pin[6] << top2:top_module_2.display1_pin
display6_pin[0] << top2:top_module_2.display2_pin
display6_pin[1] << top2:top_module_2.display2_pin
display6_pin[2] << top2:top_module_2.display2_pin
display6_pin[3] << top2:top_module_2.display2_pin
display6_pin[4] << top2:top_module_2.display2_pin
display6_pin[5] << top2:top_module_2.display2_pin
display6_pin[6] << top2:top_module_2.display2_pin
display7_pin[0] << top2:top_module_1.display1_pin
display7_pin[1] << top2:top_module_1.display1_pin
display7_pin[2] << top2:top_module_1.display1_pin
display7_pin[3] << top2:top_module_1.display1_pin
display7_pin[4] << top2:top_module_1.display1_pin
display7_pin[5] << top2:top_module_1.display1_pin
display7_pin[6] << top2:top_module_1.display1_pin
display8_pin[0] << top2:top_module_1.display2_pin
display8_pin[1] << top2:top_module_1.display2_pin
display8_pin[2] << top2:top_module_1.display2_pin
display8_pin[3] << top2:top_module_1.display2_pin
display8_pin[4] << top2:top_module_1.display2_pin
display8_pin[5] << top2:top_module_1.display2_pin
display8_pin[6] << top2:top_module_1.display2_pin


|tops_combined|scaledclock:CLK_DIV
inclk => count[0].CLK
inclk => count[1].CLK
inclk => count[2].CLK
inclk => count[3].CLK
inclk => count[4].CLK
inclk => count[5].CLK
inclk => count[6].CLK
inclk => count[7].CLK
inclk => count[8].CLK
inclk => count[9].CLK
inclk => count[10].CLK
inclk => count[11].CLK
inclk => count[12].CLK
inclk => count[13].CLK
inclk => count[14].CLK
inclk => count[15].CLK
inclk => count[16].CLK
inclk => count[17].CLK
inclk => count[18].CLK
inclk => count[19].CLK
inclk => count[20].CLK
inclk => count[21].CLK
inclk => count[22].CLK
inclk => count[23].CLK
inclk => count[24].CLK
inclk => count[25].CLK
inclk => count[26].CLK
inclk => count[27].CLK
inclk => count[28].CLK
inclk => count[29].CLK
inclk => count[30].CLK
inclk => count[31].CLK
inclk => clk~reg0.CLK
ena => clk.OUTPUTSELECT
ena => count[0].ENA
ena => count[1].ENA
ena => count[2].ENA
ena => count[3].ENA
ena => count[4].ENA
ena => count[5].ENA
ena => count[6].ENA
ena => count[7].ENA
ena => count[8].ENA
ena => count[9].ENA
ena => count[10].ENA
ena => count[11].ENA
ena => count[12].ENA
ena => count[13].ENA
ena => count[14].ENA
ena => count[15].ENA
ena => count[16].ENA
ena => count[17].ENA
ena => count[18].ENA
ena => count[19].ENA
ena => count[20].ENA
ena => count[21].ENA
ena => count[22].ENA
ena => count[23].ENA
ena => count[24].ENA
ena => count[25].ENA
ena => count[26].ENA
ena => count[27].ENA
ena => count[28].ENA
ena => count[29].ENA
ena => count[30].ENA
ena => count[31].ENA
clk <= clk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1
clock => clock.IN1
rst => reset.IN6
enable => enable.IN1
button1_raw => button.IN1
switch_array[0] => switch_array[0].IN1
switch_array[1] => switch_array[1].IN1
switch_array[2] => switch_array[2].IN1
switch_array[3] => switch_array[3].IN1
switch_array[4] => switch_array[4].IN1
switch_array[5] => switch_array[5].IN1
switch_array[6] => switch_array[6].IN1
switch_array[7] => switch_array[7].IN1
mode_switch => mode_switch.IN1
scaled_clk <= clk.DB_MAX_OUTPUT_PORT_TYPE
bi_uart_rx => bi_uart_rx.IN1
bo_uart_rx => bo_uart_rx.IN1
bi_uart_tx <= bridge_module:INPUT_BRIDGE.u_tx_data
bo_uart_tx <= bridge_module:OUTPUT_BRIDGE.u_tx_data
display1_pin[0] <= increment_module:INCREMENT.display1_pin
display1_pin[1] <= increment_module:INCREMENT.display1_pin
display1_pin[2] <= increment_module:INCREMENT.display1_pin
display1_pin[3] <= increment_module:INCREMENT.display1_pin
display1_pin[4] <= increment_module:INCREMENT.display1_pin
display1_pin[5] <= increment_module:INCREMENT.display1_pin
display1_pin[6] <= increment_module:INCREMENT.display1_pin
display2_pin[0] <= increment_module:INCREMENT.display2_pin
display2_pin[1] <= increment_module:INCREMENT.display2_pin
display2_pin[2] <= increment_module:INCREMENT.display2_pin
display2_pin[3] <= increment_module:INCREMENT.display2_pin
display2_pin[4] <= increment_module:INCREMENT.display2_pin
display2_pin[5] <= increment_module:INCREMENT.display2_pin
display2_pin[6] <= increment_module:INCREMENT.display2_pin


|tops_combined|top2:top_module_1|scaledclock:CLK_DIV
inclk => count[0].CLK
inclk => count[1].CLK
inclk => count[2].CLK
inclk => count[3].CLK
inclk => count[4].CLK
inclk => count[5].CLK
inclk => count[6].CLK
inclk => count[7].CLK
inclk => count[8].CLK
inclk => count[9].CLK
inclk => count[10].CLK
inclk => count[11].CLK
inclk => count[12].CLK
inclk => count[13].CLK
inclk => count[14].CLK
inclk => count[15].CLK
inclk => count[16].CLK
inclk => count[17].CLK
inclk => count[18].CLK
inclk => count[19].CLK
inclk => count[20].CLK
inclk => count[21].CLK
inclk => count[22].CLK
inclk => count[23].CLK
inclk => count[24].CLK
inclk => count[25].CLK
inclk => count[26].CLK
inclk => count[27].CLK
inclk => count[28].CLK
inclk => count[29].CLK
inclk => count[30].CLK
inclk => count[31].CLK
inclk => clk~reg0.CLK
ena => clk.OUTPUTSELECT
ena => count[0].ENA
ena => count[1].ENA
ena => count[2].ENA
ena => count[3].ENA
ena => count[4].ENA
ena => count[5].ENA
ena => count[6].ENA
ena => count[7].ENA
ena => count[8].ENA
ena => count[9].ENA
ena => count[10].ENA
ena => count[11].ENA
ena => count[12].ENA
ena => count[13].ENA
ena => count[14].ENA
ena => count[15].ENA
ena => count[16].ENA
ena => count[17].ENA
ena => count[18].ENA
ena => count[19].ENA
ena => count[20].ENA
ena => count[21].ENA
ena => count[22].ENA
ena => count[23].ENA
ena => count[24].ENA
ena => count[25].ENA
ena => count[26].ENA
ena => count[27].ENA
ena => count[28].ENA
ena => count[29].ENA
ena => count[30].ENA
ena => count[31].ENA
clk <= clk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:INPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|bridge_module:OUTPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT
clk => clk.IN3
reset => reset.IN3
display1_pin[0] <= increment:inc1.display1_pin
display1_pin[1] <= increment:inc1.display1_pin
display1_pin[2] <= increment:inc1.display1_pin
display1_pin[3] <= increment:inc1.display1_pin
display1_pin[4] <= increment:inc1.display1_pin
display1_pin[5] <= increment:inc1.display1_pin
display1_pin[6] <= increment:inc1.display1_pin
display2_pin[0] <= increment:inc1.display2_pin
display2_pin[1] <= increment:inc1.display2_pin
display2_pin[2] <= increment:inc1.display2_pin
display2_pin[3] <= increment:inc1.display2_pin
display2_pin[4] <= increment:inc1.display2_pin
display2_pin[5] <= increment:inc1.display2_pin
display2_pin[6] <= increment:inc1.display2_pin
button => button.IN1
mode_switch => mode_switch.IN1
sw_array_data[0] => sw_array_data[0].IN1
sw_array_data[1] => sw_array_data[1].IN1
sw_array_data[2] => sw_array_data[2].IN1
sw_array_data[3] => sw_array_data[3].IN1
sw_array_data[4] => sw_array_data[4].IN1
sw_array_data[5] => sw_array_data[5].IN1
sw_array_data[6] => sw_array_data[6].IN1
sw_array_data[7] => sw_array_data[7].IN1
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_split_en <= slave_port:SLAVE_PORT.split_en
s_tx_data <= slave_port:SLAVE_PORT.tx_data


|tops_combined|top2:top_module_1|increment_module:INCREMENT|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_1|increment_module:INCREMENT|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|increment:inc1
clk => clk.IN2
reset => reset.IN2
display1_pin[0] <= bin27:DISPLAY1.io_seven
display1_pin[1] <= bin27:DISPLAY1.io_seven
display1_pin[2] <= bin27:DISPLAY1.io_seven
display1_pin[3] <= bin27:DISPLAY1.io_seven
display1_pin[4] <= bin27:DISPLAY1.io_seven
display1_pin[5] <= bin27:DISPLAY1.io_seven
display1_pin[6] <= bin27:DISPLAY1.io_seven
display2_pin[0] <= bin27:DISPLAY2.io_seven
display2_pin[1] <= bin27:DISPLAY2.io_seven
display2_pin[2] <= bin27:DISPLAY2.io_seven
display2_pin[3] <= bin27:DISPLAY2.io_seven
display2_pin[4] <= bin27:DISPLAY2.io_seven
display2_pin[5] <= bin27:DISPLAY2.io_seven
display2_pin[6] <= bin27:DISPLAY2.io_seven
button => always0.IN0
mode_switch => always0.IN0
mode_switch => always0.IN1
sw_array_data[0] => output_data.DATAB
sw_array_data[1] => output_data.DATAB
sw_array_data[2] => output_data.DATAB
sw_array_data[3] => output_data.DATAB
sw_array_data[4] => output_data.DATAB
sw_array_data[5] => output_data.DATAB
sw_array_data[6] => output_data.DATAB
sw_array_data[7] => output_data.DATAB
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => Selector17.IN1
m_data_out[0] <= data_to_master[0].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= data_to_master[1].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= data_to_master[2].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= data_to_master[3].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= data_to_master[4].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= data_to_master[5].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= data_to_master[6].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= data_to_master[7].DB_MAX_OUTPUT_PORT_TYPE
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[0] => output_data.DATAB
s_data[1] => output_data.DATAB
s_data[2] => output_data.DATAB
s_data[3] => output_data.DATAB
s_data[4] => output_data.DATAB
s_data[5] => output_data.DATAB
s_data[6] => output_data.DATAB
s_data[7] => output_data.DATAB
s_write_en_in => always0.IN1


|tops_combined|top2:top_module_1|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_1|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_1|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|Bus_interconnect:BUS
sys_clk => sys_clk.IN1
sys_rst => sys_rst.IN1
m1_request => m1_request.IN1
m2_request => m2_request.IN1
m1_slave_sel => m1_slave_sel.IN1
m2_slave_sel => m2_slave_sel.IN1
trans_done => trans_done.IN1
m1_grant <= Bus_Arbiter:Bus_Arbiter1.m1_grant
m2_grant <= Bus_Arbiter:Bus_Arbiter1.m2_grant
arbiter_busy <= Bus_Arbiter:Bus_Arbiter1.arbiter_busy
bus_busy <= Bus_Arbiter:Bus_Arbiter1.bus_busy
m1_clk => m1_clk.IN1
m1_rst => m1_rst.IN1
m1_master_valid => m1_master_valid.IN1
m1_master_ready => m1_master_ready.IN1
m1_tx_address => m1_tx_address.IN1
m1_tx_data => m1_tx_data.IN1
m1_rx_data <= Bus_mux:Bus_mux1.m1_rx_data
m1_write_en => m1_write_en.IN1
m1_read_en => m1_read_en.IN1
m1_slave_valid <= Bus_mux:Bus_mux1.m1_slave_valid
m1_slave_ready <= Bus_mux:Bus_mux1.m1_slave_ready
m2_clk => m2_clk.IN1
m2_rst => m2_rst.IN1
m2_master_valid => m2_master_valid.IN1
m2_master_ready => m2_master_ready.IN1
m2_tx_address => m2_tx_address.IN1
m2_tx_data => m2_tx_data.IN1
m2_rx_data <= Bus_mux:Bus_mux1.m2_rx_data
m2_write_en => m2_write_en.IN1
m2_read_en => m2_read_en.IN1
m2_slave_valid <= Bus_mux:Bus_mux1.m2_slave_valid
m2_slave_ready <= Bus_mux:Bus_mux1.m2_slave_ready
s1_clk <= Bus_mux:Bus_mux1.s1_clk
s1_rst <= Bus_mux:Bus_mux1.s1_rst
s1_master_valid <= Bus_mux:Bus_mux1.s1_master_valid
s1_master_ready <= Bus_mux:Bus_mux1.s1_master_ready
s1_rx_address <= Bus_mux:Bus_mux1.s1_rx_address
s1_rx_data <= Bus_mux:Bus_mux1.s1_rx_data
s1_tx_data => s1_tx_data.IN1
s1_write_en <= Bus_mux:Bus_mux1.s1_write_en
s1_read_en <= Bus_mux:Bus_mux1.s1_read_en
s1_slave_valid => s1_slave_valid.IN1
s1_slave_ready => s1_slave_ready.IN1
s2_clk <= Bus_mux:Bus_mux1.s2_clk
s2_rst <= Bus_mux:Bus_mux1.s2_rst
s2_master_valid <= Bus_mux:Bus_mux1.s2_master_valid
s2_master_ready <= Bus_mux:Bus_mux1.s2_master_ready
s2_rx_address <= Bus_mux:Bus_mux1.s2_rx_address
s2_rx_data <= Bus_mux:Bus_mux1.s2_rx_data
s2_tx_data => s2_tx_data.IN1
s2_write_en <= Bus_mux:Bus_mux1.s2_write_en
s2_read_en <= Bus_mux:Bus_mux1.s2_read_en
s2_slave_valid => s2_slave_valid.IN1
s2_slave_ready => s2_slave_ready.IN1
s3_clk <= Bus_mux:Bus_mux1.s3_clk
s3_rst <= Bus_mux:Bus_mux1.s3_rst
s3_master_valid <= Bus_mux:Bus_mux1.s3_master_valid
s3_master_ready <= Bus_mux:Bus_mux1.s3_master_ready
s3_rx_address <= Bus_mux:Bus_mux1.s3_rx_address
s3_rx_data <= Bus_mux:Bus_mux1.s3_rx_data
s3_tx_data => s3_tx_data.IN1
s3_write_en <= Bus_mux:Bus_mux1.s3_write_en
s3_read_en <= Bus_mux:Bus_mux1.s3_read_en
s3_slave_valid => s3_slave_valid.IN1
s3_slave_ready => s3_slave_ready.IN1
s1_slave_split_en => s1_slave_split_en.IN1
s2_slave_split_en => s2_slave_split_en.IN1
s3_slave_split_en => s3_slave_split_en.IN1
m1_tx_burst_num => m1_tx_burst_num.IN1
m2_tx_burst_num => m2_tx_burst_num.IN1
s1_rx_burst_num <= Bus_mux:Bus_mux1.s1_rx_burst_num
s2_rx_burst_num <= Bus_mux:Bus_mux1.s2_rx_burst_num
s3_rx_burst_num <= Bus_mux:Bus_mux1.s3_rx_burst_num


|tops_combined|top2:top_module_1|Bus_interconnect:BUS|Bus_Arbiter:Bus_Arbiter1
sys_clk => previous_slave_sel[0].CLK
sys_clk => previous_slave_sel[1].CLK
sys_clk => previous_grant[0].CLK
sys_clk => previous_grant[1].CLK
sys_clk => previous_m2_grant.CLK
sys_clk => previous_m1_grant.CLK
sys_clk => bus_busy~reg0.CLK
sys_clk => arbiter_busy~reg0.CLK
sys_clk => slave_sel[0]~reg0.CLK
sys_clk => slave_sel[1]~reg0.CLK
sys_clk => bus_grant[0]~reg0.CLK
sys_clk => bus_grant[1]~reg0.CLK
sys_clk => m2_grant~reg0.CLK
sys_clk => m1_grant~reg0.CLK
sys_clk => rx_m2_slave[0].CLK
sys_clk => rx_m2_slave[1].CLK
sys_clk => rx_m1_slave[0].CLK
sys_clk => rx_m1_slave[1].CLK
sys_clk => slave_sel_done.CLK
sys_clk => arbiter_state~1.DATAIN
sys_clk => slave_addr_state~1.DATAIN
sys_rst => bus_busy~reg0.ACLR
sys_rst => arbiter_busy~reg0.ACLR
sys_rst => slave_sel[0]~reg0.ACLR
sys_rst => slave_sel[1]~reg0.ACLR
sys_rst => bus_grant[0]~reg0.ACLR
sys_rst => bus_grant[1]~reg0.ACLR
sys_rst => m2_grant~reg0.ACLR
sys_rst => m1_grant~reg0.ACLR
sys_rst => rx_m2_slave[0].ACLR
sys_rst => rx_m2_slave[1].ACLR
sys_rst => rx_m1_slave[0].ACLR
sys_rst => rx_m1_slave[1].ACLR
sys_rst => slave_sel_done.ACLR
sys_rst => arbiter_state~3.DATAIN
sys_rst => slave_addr_state~3.DATAIN
sys_rst => previous_slave_sel[0].ENA
sys_rst => previous_m1_grant.ENA
sys_rst => previous_m2_grant.ENA
sys_rst => previous_grant[1].ENA
sys_rst => previous_grant[0].ENA
sys_rst => previous_slave_sel[1].ENA
m1_request => start.IN0
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => m1_grant.OUTPUTSELECT
m1_request => m2_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => Selector3.IN3
m1_request => Selector7.IN3
m2_request => start.IN1
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => m1_grant.OUTPUTSELECT
m2_request => m2_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => arbiter_busy.OUTPUTSELECT
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.DATAA
m2_request => arbiter_busy.DATAA
m2_request => arbiter_state.DATAA
m1_slave_sel => rx_m1_slave.DATAB
m1_slave_sel => rx_m1_slave[1].DATAIN
m2_slave_sel => rx_m2_slave.DATAB
m2_slave_sel => rx_m2_slave[1].DATAIN
trans_done => arbiter_state.OUTPUTSELECT
trans_done => bus_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => previous_m1_grant.OUTPUTSELECT
trans_done => previous_m2_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => arbiter_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => Selector2.IN3
trans_done => Selector5.IN4
trans_done => Selector9.IN3
s1_slave_split_en => comb.IN0
s2_slave_split_en => comb.IN1
s3_slave_split_en => slave_split_en.IN1
m1_grant <= m1_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2_grant <= m2_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbiter_busy <= arbiter_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_busy <= bus_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[0] <= bus_grant[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[1] <= bus_grant[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[0] <= slave_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[1] <= slave_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_1|Bus_interconnect:BUS|Bus_mux:Bus_mux1
bus_grant[0] => Equal2.IN0
bus_grant[0] => Equal4.IN1
bus_grant[1] => Equal2.IN1
bus_grant[1] => Equal4.IN0
slave_sel[0] => Equal0.IN0
slave_sel[0] => Equal1.IN1
slave_sel[0] => Equal3.IN1
slave_sel[1] => Equal0.IN1
slave_sel[1] => Equal1.IN0
slave_sel[1] => Equal3.IN0
m1_clk => s1_clk.DATAB
m1_clk => s2_clk.DATAB
m1_clk => s3_clk.DATAB
m1_rst => s1_rst.DATAB
m1_rst => s2_rst.DATAB
m1_rst => s3_rst.DATAB
m1_master_valid => s1_master_valid.DATAB
m1_master_valid => s2_master_valid.DATAB
m1_master_valid => s3_master_valid.DATAB
m1_master_ready => s1_master_ready.DATAB
m1_master_ready => s2_master_ready.DATAB
m1_master_ready => s3_master_ready.DATAB
m1_tx_address => s1_rx_address.DATAB
m1_tx_address => s2_rx_address.DATAB
m1_tx_address => s3_rx_address.DATAB
m1_tx_data => s1_rx_data.DATAB
m1_tx_data => s2_rx_data.DATAB
m1_tx_data => s3_rx_data.DATAB
m1_rx_data <= m1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m1_write_en => s1_write_en.DATAB
m1_write_en => s2_write_en.DATAB
m1_write_en => s3_write_en.DATAB
m1_read_en => s1_read_en.DATAB
m1_read_en => s2_read_en.DATAB
m1_read_en => s3_read_en.DATAB
m1_slave_valid <= m1_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m1_slave_ready <= m1_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m1_tx_burst_num => s1_rx_burst_num.DATAB
m1_tx_burst_num => s2_rx_burst_num.DATAB
m1_tx_burst_num => s3_rx_burst_num.DATAB
m2_clk => s1_clk.DATAB
m2_clk => s2_clk.DATAB
m2_clk => s3_clk.DATAB
m2_rst => s1_rst.DATAB
m2_rst => s2_rst.DATAB
m2_rst => s3_rst.DATAB
m2_master_valid => s1_master_valid.DATAB
m2_master_valid => s2_master_valid.DATAB
m2_master_valid => s3_master_valid.DATAB
m2_master_ready => s1_master_ready.DATAB
m2_master_ready => s2_master_ready.DATAB
m2_master_ready => s3_master_ready.DATAB
m2_tx_address => s1_rx_address.DATAB
m2_tx_address => s2_rx_address.DATAB
m2_tx_address => s3_rx_address.DATAB
m2_tx_data => s1_rx_data.DATAB
m2_tx_data => s2_rx_data.DATAB
m2_tx_data => s3_rx_data.DATAB
m2_rx_data <= m2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m2_write_en => s1_write_en.DATAB
m2_write_en => s2_write_en.DATAB
m2_write_en => s3_write_en.DATAB
m2_read_en => s1_read_en.DATAB
m2_read_en => s2_read_en.DATAB
m2_read_en => s3_read_en.DATAB
m2_slave_valid <= m2_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m2_slave_ready <= m2_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m2_tx_burst_num => s1_rx_burst_num.DATAB
m2_tx_burst_num => s2_rx_burst_num.DATAB
m2_tx_burst_num => s3_rx_burst_num.DATAB
s1_clk <= s1_clk.DB_MAX_OUTPUT_PORT_TYPE
s1_rst <= s1_rst.DB_MAX_OUTPUT_PORT_TYPE
s1_master_valid <= s1_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s1_master_ready <= s1_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_address <= s1_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_data <= s1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s1_tx_data => m1_rx_data.DATAB
s1_tx_data => m2_rx_data.DATAB
s1_write_en <= s1_write_en.DB_MAX_OUTPUT_PORT_TYPE
s1_read_en <= s1_read_en.DB_MAX_OUTPUT_PORT_TYPE
s1_slave_valid => m1_slave_valid.DATAB
s1_slave_valid => m2_slave_valid.DATAB
s1_slave_ready => m1_slave_ready.DATAB
s1_slave_ready => m2_slave_ready.DATAB
s1_rx_burst_num <= s1_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s2_clk <= s2_clk.DB_MAX_OUTPUT_PORT_TYPE
s2_rst <= s2_rst.DB_MAX_OUTPUT_PORT_TYPE
s2_master_valid <= s2_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s2_master_ready <= s2_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_address <= s2_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_data <= s2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s2_tx_data => m1_rx_data.DATAB
s2_tx_data => m2_rx_data.DATAB
s2_write_en <= s2_write_en.DB_MAX_OUTPUT_PORT_TYPE
s2_read_en <= s2_read_en.DB_MAX_OUTPUT_PORT_TYPE
s2_slave_valid => m1_slave_valid.DATAB
s2_slave_valid => m2_slave_valid.DATAB
s2_slave_ready => m1_slave_ready.DATAB
s2_slave_ready => m2_slave_ready.DATAB
s2_rx_burst_num <= s2_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s3_clk <= s3_clk.DB_MAX_OUTPUT_PORT_TYPE
s3_rst <= s3_rst.DB_MAX_OUTPUT_PORT_TYPE
s3_master_valid <= s3_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s3_master_ready <= s3_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_address <= s3_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_data <= s3_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s3_tx_data => m1_rx_data.DATAB
s3_tx_data => m2_rx_data.DATAB
s3_write_en <= s3_write_en.DB_MAX_OUTPUT_PORT_TYPE
s3_read_en <= s3_read_en.DB_MAX_OUTPUT_PORT_TYPE
s3_slave_valid => m1_slave_valid.DATAB
s3_slave_valid => m2_slave_valid.DATAB
s3_slave_ready => m1_slave_ready.DATAB
s3_slave_ready => m2_slave_ready.DATAB
s3_rx_burst_num <= s3_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2
clock => clock.IN1
rst => reset.IN6
enable => enable.IN1
button1_raw => button.IN1
switch_array[0] => switch_array[0].IN1
switch_array[1] => switch_array[1].IN1
switch_array[2] => switch_array[2].IN1
switch_array[3] => switch_array[3].IN1
switch_array[4] => switch_array[4].IN1
switch_array[5] => switch_array[5].IN1
switch_array[6] => switch_array[6].IN1
switch_array[7] => switch_array[7].IN1
mode_switch => mode_switch.IN1
scaled_clk <= clk.DB_MAX_OUTPUT_PORT_TYPE
bi_uart_rx => bi_uart_rx.IN1
bo_uart_rx => bo_uart_rx.IN1
bi_uart_tx <= bridge_module:INPUT_BRIDGE.u_tx_data
bo_uart_tx <= bridge_module:OUTPUT_BRIDGE.u_tx_data
display1_pin[0] <= increment_module:INCREMENT.display1_pin
display1_pin[1] <= increment_module:INCREMENT.display1_pin
display1_pin[2] <= increment_module:INCREMENT.display1_pin
display1_pin[3] <= increment_module:INCREMENT.display1_pin
display1_pin[4] <= increment_module:INCREMENT.display1_pin
display1_pin[5] <= increment_module:INCREMENT.display1_pin
display1_pin[6] <= increment_module:INCREMENT.display1_pin
display2_pin[0] <= increment_module:INCREMENT.display2_pin
display2_pin[1] <= increment_module:INCREMENT.display2_pin
display2_pin[2] <= increment_module:INCREMENT.display2_pin
display2_pin[3] <= increment_module:INCREMENT.display2_pin
display2_pin[4] <= increment_module:INCREMENT.display2_pin
display2_pin[5] <= increment_module:INCREMENT.display2_pin
display2_pin[6] <= increment_module:INCREMENT.display2_pin


|tops_combined|top2:top_module_2|scaledclock:CLK_DIV
inclk => count[0].CLK
inclk => count[1].CLK
inclk => count[2].CLK
inclk => count[3].CLK
inclk => count[4].CLK
inclk => count[5].CLK
inclk => count[6].CLK
inclk => count[7].CLK
inclk => count[8].CLK
inclk => count[9].CLK
inclk => count[10].CLK
inclk => count[11].CLK
inclk => count[12].CLK
inclk => count[13].CLK
inclk => count[14].CLK
inclk => count[15].CLK
inclk => count[16].CLK
inclk => count[17].CLK
inclk => count[18].CLK
inclk => count[19].CLK
inclk => count[20].CLK
inclk => count[21].CLK
inclk => count[22].CLK
inclk => count[23].CLK
inclk => count[24].CLK
inclk => count[25].CLK
inclk => count[26].CLK
inclk => count[27].CLK
inclk => count[28].CLK
inclk => count[29].CLK
inclk => count[30].CLK
inclk => count[31].CLK
inclk => clk~reg0.CLK
ena => clk.OUTPUTSELECT
ena => count[0].ENA
ena => count[1].ENA
ena => count[2].ENA
ena => count[3].ENA
ena => count[4].ENA
ena => count[5].ENA
ena => count[6].ENA
ena => count[7].ENA
ena => count[8].ENA
ena => count[9].ENA
ena => count[10].ENA
ena => count[11].ENA
ena => count[12].ENA
ena => count[13].ENA
ena => count[14].ENA
ena => count[15].ENA
ena => count[16].ENA
ena => count[17].ENA
ena => count[18].ENA
ena => count[19].ENA
ena => count[20].ENA
ena => count[21].ENA
ena => count[22].ENA
ena => count[23].ENA
ena => count[24].ENA
ena => count[25].ENA
ena => count[26].ENA
ena => count[27].ENA
ena => count[28].ENA
ena => count[29].ENA
ena => count[30].ENA
ena => count[31].ENA
clk <= clk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:INPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|bridge_module:OUTPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT
clk => clk.IN3
reset => reset.IN3
display1_pin[0] <= increment:inc1.display1_pin
display1_pin[1] <= increment:inc1.display1_pin
display1_pin[2] <= increment:inc1.display1_pin
display1_pin[3] <= increment:inc1.display1_pin
display1_pin[4] <= increment:inc1.display1_pin
display1_pin[5] <= increment:inc1.display1_pin
display1_pin[6] <= increment:inc1.display1_pin
display2_pin[0] <= increment:inc1.display2_pin
display2_pin[1] <= increment:inc1.display2_pin
display2_pin[2] <= increment:inc1.display2_pin
display2_pin[3] <= increment:inc1.display2_pin
display2_pin[4] <= increment:inc1.display2_pin
display2_pin[5] <= increment:inc1.display2_pin
display2_pin[6] <= increment:inc1.display2_pin
button => button.IN1
mode_switch => mode_switch.IN1
sw_array_data[0] => sw_array_data[0].IN1
sw_array_data[1] => sw_array_data[1].IN1
sw_array_data[2] => sw_array_data[2].IN1
sw_array_data[3] => sw_array_data[3].IN1
sw_array_data[4] => sw_array_data[4].IN1
sw_array_data[5] => sw_array_data[5].IN1
sw_array_data[6] => sw_array_data[6].IN1
sw_array_data[7] => sw_array_data[7].IN1
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_split_en <= slave_port:SLAVE_PORT.split_en
s_tx_data <= slave_port:SLAVE_PORT.tx_data


|tops_combined|top2:top_module_2|increment_module:INCREMENT|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_2|increment_module:INCREMENT|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|increment:inc1
clk => clk.IN2
reset => reset.IN2
display1_pin[0] <= bin27:DISPLAY1.io_seven
display1_pin[1] <= bin27:DISPLAY1.io_seven
display1_pin[2] <= bin27:DISPLAY1.io_seven
display1_pin[3] <= bin27:DISPLAY1.io_seven
display1_pin[4] <= bin27:DISPLAY1.io_seven
display1_pin[5] <= bin27:DISPLAY1.io_seven
display1_pin[6] <= bin27:DISPLAY1.io_seven
display2_pin[0] <= bin27:DISPLAY2.io_seven
display2_pin[1] <= bin27:DISPLAY2.io_seven
display2_pin[2] <= bin27:DISPLAY2.io_seven
display2_pin[3] <= bin27:DISPLAY2.io_seven
display2_pin[4] <= bin27:DISPLAY2.io_seven
display2_pin[5] <= bin27:DISPLAY2.io_seven
display2_pin[6] <= bin27:DISPLAY2.io_seven
button => always0.IN0
mode_switch => always0.IN0
mode_switch => always0.IN1
sw_array_data[0] => output_data.DATAB
sw_array_data[1] => output_data.DATAB
sw_array_data[2] => output_data.DATAB
sw_array_data[3] => output_data.DATAB
sw_array_data[4] => output_data.DATAB
sw_array_data[5] => output_data.DATAB
sw_array_data[6] => output_data.DATAB
sw_array_data[7] => output_data.DATAB
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => Selector17.IN1
m_data_out[0] <= data_to_master[0].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= data_to_master[1].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= data_to_master[2].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= data_to_master[3].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= data_to_master[4].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= data_to_master[5].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= data_to_master[6].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= data_to_master[7].DB_MAX_OUTPUT_PORT_TYPE
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[0] => output_data.DATAB
s_data[1] => output_data.DATAB
s_data[2] => output_data.DATAB
s_data[3] => output_data.DATAB
s_data[4] => output_data.DATAB
s_data[5] => output_data.DATAB
s_data[6] => output_data.DATAB
s_data[7] => output_data.DATAB
s_write_en_in => always0.IN1


|tops_combined|top2:top_module_2|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_2|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_2|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|Bus_interconnect:BUS
sys_clk => sys_clk.IN1
sys_rst => sys_rst.IN1
m1_request => m1_request.IN1
m2_request => m2_request.IN1
m1_slave_sel => m1_slave_sel.IN1
m2_slave_sel => m2_slave_sel.IN1
trans_done => trans_done.IN1
m1_grant <= Bus_Arbiter:Bus_Arbiter1.m1_grant
m2_grant <= Bus_Arbiter:Bus_Arbiter1.m2_grant
arbiter_busy <= Bus_Arbiter:Bus_Arbiter1.arbiter_busy
bus_busy <= Bus_Arbiter:Bus_Arbiter1.bus_busy
m1_clk => m1_clk.IN1
m1_rst => m1_rst.IN1
m1_master_valid => m1_master_valid.IN1
m1_master_ready => m1_master_ready.IN1
m1_tx_address => m1_tx_address.IN1
m1_tx_data => m1_tx_data.IN1
m1_rx_data <= Bus_mux:Bus_mux1.m1_rx_data
m1_write_en => m1_write_en.IN1
m1_read_en => m1_read_en.IN1
m1_slave_valid <= Bus_mux:Bus_mux1.m1_slave_valid
m1_slave_ready <= Bus_mux:Bus_mux1.m1_slave_ready
m2_clk => m2_clk.IN1
m2_rst => m2_rst.IN1
m2_master_valid => m2_master_valid.IN1
m2_master_ready => m2_master_ready.IN1
m2_tx_address => m2_tx_address.IN1
m2_tx_data => m2_tx_data.IN1
m2_rx_data <= Bus_mux:Bus_mux1.m2_rx_data
m2_write_en => m2_write_en.IN1
m2_read_en => m2_read_en.IN1
m2_slave_valid <= Bus_mux:Bus_mux1.m2_slave_valid
m2_slave_ready <= Bus_mux:Bus_mux1.m2_slave_ready
s1_clk <= Bus_mux:Bus_mux1.s1_clk
s1_rst <= Bus_mux:Bus_mux1.s1_rst
s1_master_valid <= Bus_mux:Bus_mux1.s1_master_valid
s1_master_ready <= Bus_mux:Bus_mux1.s1_master_ready
s1_rx_address <= Bus_mux:Bus_mux1.s1_rx_address
s1_rx_data <= Bus_mux:Bus_mux1.s1_rx_data
s1_tx_data => s1_tx_data.IN1
s1_write_en <= Bus_mux:Bus_mux1.s1_write_en
s1_read_en <= Bus_mux:Bus_mux1.s1_read_en
s1_slave_valid => s1_slave_valid.IN1
s1_slave_ready => s1_slave_ready.IN1
s2_clk <= Bus_mux:Bus_mux1.s2_clk
s2_rst <= Bus_mux:Bus_mux1.s2_rst
s2_master_valid <= Bus_mux:Bus_mux1.s2_master_valid
s2_master_ready <= Bus_mux:Bus_mux1.s2_master_ready
s2_rx_address <= Bus_mux:Bus_mux1.s2_rx_address
s2_rx_data <= Bus_mux:Bus_mux1.s2_rx_data
s2_tx_data => s2_tx_data.IN1
s2_write_en <= Bus_mux:Bus_mux1.s2_write_en
s2_read_en <= Bus_mux:Bus_mux1.s2_read_en
s2_slave_valid => s2_slave_valid.IN1
s2_slave_ready => s2_slave_ready.IN1
s3_clk <= Bus_mux:Bus_mux1.s3_clk
s3_rst <= Bus_mux:Bus_mux1.s3_rst
s3_master_valid <= Bus_mux:Bus_mux1.s3_master_valid
s3_master_ready <= Bus_mux:Bus_mux1.s3_master_ready
s3_rx_address <= Bus_mux:Bus_mux1.s3_rx_address
s3_rx_data <= Bus_mux:Bus_mux1.s3_rx_data
s3_tx_data => s3_tx_data.IN1
s3_write_en <= Bus_mux:Bus_mux1.s3_write_en
s3_read_en <= Bus_mux:Bus_mux1.s3_read_en
s3_slave_valid => s3_slave_valid.IN1
s3_slave_ready => s3_slave_ready.IN1
s1_slave_split_en => s1_slave_split_en.IN1
s2_slave_split_en => s2_slave_split_en.IN1
s3_slave_split_en => s3_slave_split_en.IN1
m1_tx_burst_num => m1_tx_burst_num.IN1
m2_tx_burst_num => m2_tx_burst_num.IN1
s1_rx_burst_num <= Bus_mux:Bus_mux1.s1_rx_burst_num
s2_rx_burst_num <= Bus_mux:Bus_mux1.s2_rx_burst_num
s3_rx_burst_num <= Bus_mux:Bus_mux1.s3_rx_burst_num


|tops_combined|top2:top_module_2|Bus_interconnect:BUS|Bus_Arbiter:Bus_Arbiter1
sys_clk => previous_slave_sel[0].CLK
sys_clk => previous_slave_sel[1].CLK
sys_clk => previous_grant[0].CLK
sys_clk => previous_grant[1].CLK
sys_clk => previous_m2_grant.CLK
sys_clk => previous_m1_grant.CLK
sys_clk => bus_busy~reg0.CLK
sys_clk => arbiter_busy~reg0.CLK
sys_clk => slave_sel[0]~reg0.CLK
sys_clk => slave_sel[1]~reg0.CLK
sys_clk => bus_grant[0]~reg0.CLK
sys_clk => bus_grant[1]~reg0.CLK
sys_clk => m2_grant~reg0.CLK
sys_clk => m1_grant~reg0.CLK
sys_clk => rx_m2_slave[0].CLK
sys_clk => rx_m2_slave[1].CLK
sys_clk => rx_m1_slave[0].CLK
sys_clk => rx_m1_slave[1].CLK
sys_clk => slave_sel_done.CLK
sys_clk => arbiter_state~1.DATAIN
sys_clk => slave_addr_state~1.DATAIN
sys_rst => bus_busy~reg0.ACLR
sys_rst => arbiter_busy~reg0.ACLR
sys_rst => slave_sel[0]~reg0.ACLR
sys_rst => slave_sel[1]~reg0.ACLR
sys_rst => bus_grant[0]~reg0.ACLR
sys_rst => bus_grant[1]~reg0.ACLR
sys_rst => m2_grant~reg0.ACLR
sys_rst => m1_grant~reg0.ACLR
sys_rst => rx_m2_slave[0].ACLR
sys_rst => rx_m2_slave[1].ACLR
sys_rst => rx_m1_slave[0].ACLR
sys_rst => rx_m1_slave[1].ACLR
sys_rst => slave_sel_done.ACLR
sys_rst => arbiter_state~3.DATAIN
sys_rst => slave_addr_state~3.DATAIN
sys_rst => previous_slave_sel[0].ENA
sys_rst => previous_m1_grant.ENA
sys_rst => previous_m2_grant.ENA
sys_rst => previous_grant[1].ENA
sys_rst => previous_grant[0].ENA
sys_rst => previous_slave_sel[1].ENA
m1_request => start.IN0
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => m1_grant.OUTPUTSELECT
m1_request => m2_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => Selector3.IN3
m1_request => Selector7.IN3
m2_request => start.IN1
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => m1_grant.OUTPUTSELECT
m2_request => m2_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => arbiter_busy.OUTPUTSELECT
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.DATAA
m2_request => arbiter_busy.DATAA
m2_request => arbiter_state.DATAA
m1_slave_sel => rx_m1_slave.DATAB
m1_slave_sel => rx_m1_slave[1].DATAIN
m2_slave_sel => rx_m2_slave.DATAB
m2_slave_sel => rx_m2_slave[1].DATAIN
trans_done => arbiter_state.OUTPUTSELECT
trans_done => bus_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => previous_m1_grant.OUTPUTSELECT
trans_done => previous_m2_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => arbiter_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => Selector2.IN3
trans_done => Selector5.IN4
trans_done => Selector9.IN3
s1_slave_split_en => comb.IN0
s2_slave_split_en => comb.IN1
s3_slave_split_en => slave_split_en.IN1
m1_grant <= m1_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2_grant <= m2_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbiter_busy <= arbiter_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_busy <= bus_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[0] <= bus_grant[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[1] <= bus_grant[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[0] <= slave_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[1] <= slave_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_2|Bus_interconnect:BUS|Bus_mux:Bus_mux1
bus_grant[0] => Equal2.IN0
bus_grant[0] => Equal4.IN1
bus_grant[1] => Equal2.IN1
bus_grant[1] => Equal4.IN0
slave_sel[0] => Equal0.IN0
slave_sel[0] => Equal1.IN1
slave_sel[0] => Equal3.IN1
slave_sel[1] => Equal0.IN1
slave_sel[1] => Equal1.IN0
slave_sel[1] => Equal3.IN0
m1_clk => s1_clk.DATAB
m1_clk => s2_clk.DATAB
m1_clk => s3_clk.DATAB
m1_rst => s1_rst.DATAB
m1_rst => s2_rst.DATAB
m1_rst => s3_rst.DATAB
m1_master_valid => s1_master_valid.DATAB
m1_master_valid => s2_master_valid.DATAB
m1_master_valid => s3_master_valid.DATAB
m1_master_ready => s1_master_ready.DATAB
m1_master_ready => s2_master_ready.DATAB
m1_master_ready => s3_master_ready.DATAB
m1_tx_address => s1_rx_address.DATAB
m1_tx_address => s2_rx_address.DATAB
m1_tx_address => s3_rx_address.DATAB
m1_tx_data => s1_rx_data.DATAB
m1_tx_data => s2_rx_data.DATAB
m1_tx_data => s3_rx_data.DATAB
m1_rx_data <= m1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m1_write_en => s1_write_en.DATAB
m1_write_en => s2_write_en.DATAB
m1_write_en => s3_write_en.DATAB
m1_read_en => s1_read_en.DATAB
m1_read_en => s2_read_en.DATAB
m1_read_en => s3_read_en.DATAB
m1_slave_valid <= m1_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m1_slave_ready <= m1_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m1_tx_burst_num => s1_rx_burst_num.DATAB
m1_tx_burst_num => s2_rx_burst_num.DATAB
m1_tx_burst_num => s3_rx_burst_num.DATAB
m2_clk => s1_clk.DATAB
m2_clk => s2_clk.DATAB
m2_clk => s3_clk.DATAB
m2_rst => s1_rst.DATAB
m2_rst => s2_rst.DATAB
m2_rst => s3_rst.DATAB
m2_master_valid => s1_master_valid.DATAB
m2_master_valid => s2_master_valid.DATAB
m2_master_valid => s3_master_valid.DATAB
m2_master_ready => s1_master_ready.DATAB
m2_master_ready => s2_master_ready.DATAB
m2_master_ready => s3_master_ready.DATAB
m2_tx_address => s1_rx_address.DATAB
m2_tx_address => s2_rx_address.DATAB
m2_tx_address => s3_rx_address.DATAB
m2_tx_data => s1_rx_data.DATAB
m2_tx_data => s2_rx_data.DATAB
m2_tx_data => s3_rx_data.DATAB
m2_rx_data <= m2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m2_write_en => s1_write_en.DATAB
m2_write_en => s2_write_en.DATAB
m2_write_en => s3_write_en.DATAB
m2_read_en => s1_read_en.DATAB
m2_read_en => s2_read_en.DATAB
m2_read_en => s3_read_en.DATAB
m2_slave_valid <= m2_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m2_slave_ready <= m2_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m2_tx_burst_num => s1_rx_burst_num.DATAB
m2_tx_burst_num => s2_rx_burst_num.DATAB
m2_tx_burst_num => s3_rx_burst_num.DATAB
s1_clk <= s1_clk.DB_MAX_OUTPUT_PORT_TYPE
s1_rst <= s1_rst.DB_MAX_OUTPUT_PORT_TYPE
s1_master_valid <= s1_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s1_master_ready <= s1_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_address <= s1_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_data <= s1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s1_tx_data => m1_rx_data.DATAB
s1_tx_data => m2_rx_data.DATAB
s1_write_en <= s1_write_en.DB_MAX_OUTPUT_PORT_TYPE
s1_read_en <= s1_read_en.DB_MAX_OUTPUT_PORT_TYPE
s1_slave_valid => m1_slave_valid.DATAB
s1_slave_valid => m2_slave_valid.DATAB
s1_slave_ready => m1_slave_ready.DATAB
s1_slave_ready => m2_slave_ready.DATAB
s1_rx_burst_num <= s1_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s2_clk <= s2_clk.DB_MAX_OUTPUT_PORT_TYPE
s2_rst <= s2_rst.DB_MAX_OUTPUT_PORT_TYPE
s2_master_valid <= s2_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s2_master_ready <= s2_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_address <= s2_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_data <= s2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s2_tx_data => m1_rx_data.DATAB
s2_tx_data => m2_rx_data.DATAB
s2_write_en <= s2_write_en.DB_MAX_OUTPUT_PORT_TYPE
s2_read_en <= s2_read_en.DB_MAX_OUTPUT_PORT_TYPE
s2_slave_valid => m1_slave_valid.DATAB
s2_slave_valid => m2_slave_valid.DATAB
s2_slave_ready => m1_slave_ready.DATAB
s2_slave_ready => m2_slave_ready.DATAB
s2_rx_burst_num <= s2_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s3_clk <= s3_clk.DB_MAX_OUTPUT_PORT_TYPE
s3_rst <= s3_rst.DB_MAX_OUTPUT_PORT_TYPE
s3_master_valid <= s3_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s3_master_ready <= s3_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_address <= s3_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_data <= s3_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s3_tx_data => m1_rx_data.DATAB
s3_tx_data => m2_rx_data.DATAB
s3_write_en <= s3_write_en.DB_MAX_OUTPUT_PORT_TYPE
s3_read_en <= s3_read_en.DB_MAX_OUTPUT_PORT_TYPE
s3_slave_valid => m1_slave_valid.DATAB
s3_slave_valid => m2_slave_valid.DATAB
s3_slave_ready => m1_slave_ready.DATAB
s3_slave_ready => m2_slave_ready.DATAB
s3_rx_burst_num <= s3_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3
clock => clock.IN1
rst => reset.IN6
enable => enable.IN1
button1_raw => button.IN1
switch_array[0] => switch_array[0].IN1
switch_array[1] => switch_array[1].IN1
switch_array[2] => switch_array[2].IN1
switch_array[3] => switch_array[3].IN1
switch_array[4] => switch_array[4].IN1
switch_array[5] => switch_array[5].IN1
switch_array[6] => switch_array[6].IN1
switch_array[7] => switch_array[7].IN1
mode_switch => mode_switch.IN1
scaled_clk <= clk.DB_MAX_OUTPUT_PORT_TYPE
bi_uart_rx => bi_uart_rx.IN1
bo_uart_rx => bo_uart_rx.IN1
bi_uart_tx <= bridge_module:INPUT_BRIDGE.u_tx_data
bo_uart_tx <= bridge_module:OUTPUT_BRIDGE.u_tx_data
display1_pin[0] <= increment_module:INCREMENT.display1_pin
display1_pin[1] <= increment_module:INCREMENT.display1_pin
display1_pin[2] <= increment_module:INCREMENT.display1_pin
display1_pin[3] <= increment_module:INCREMENT.display1_pin
display1_pin[4] <= increment_module:INCREMENT.display1_pin
display1_pin[5] <= increment_module:INCREMENT.display1_pin
display1_pin[6] <= increment_module:INCREMENT.display1_pin
display2_pin[0] <= increment_module:INCREMENT.display2_pin
display2_pin[1] <= increment_module:INCREMENT.display2_pin
display2_pin[2] <= increment_module:INCREMENT.display2_pin
display2_pin[3] <= increment_module:INCREMENT.display2_pin
display2_pin[4] <= increment_module:INCREMENT.display2_pin
display2_pin[5] <= increment_module:INCREMENT.display2_pin
display2_pin[6] <= increment_module:INCREMENT.display2_pin


|tops_combined|top2:top_module_3|scaledclock:CLK_DIV
inclk => count[0].CLK
inclk => count[1].CLK
inclk => count[2].CLK
inclk => count[3].CLK
inclk => count[4].CLK
inclk => count[5].CLK
inclk => count[6].CLK
inclk => count[7].CLK
inclk => count[8].CLK
inclk => count[9].CLK
inclk => count[10].CLK
inclk => count[11].CLK
inclk => count[12].CLK
inclk => count[13].CLK
inclk => count[14].CLK
inclk => count[15].CLK
inclk => count[16].CLK
inclk => count[17].CLK
inclk => count[18].CLK
inclk => count[19].CLK
inclk => count[20].CLK
inclk => count[21].CLK
inclk => count[22].CLK
inclk => count[23].CLK
inclk => count[24].CLK
inclk => count[25].CLK
inclk => count[26].CLK
inclk => count[27].CLK
inclk => count[28].CLK
inclk => count[29].CLK
inclk => count[30].CLK
inclk => count[31].CLK
inclk => clk~reg0.CLK
ena => clk.OUTPUTSELECT
ena => count[0].ENA
ena => count[1].ENA
ena => count[2].ENA
ena => count[3].ENA
ena => count[4].ENA
ena => count[5].ENA
ena => count[6].ENA
ena => count[7].ENA
ena => count[8].ENA
ena => count[9].ENA
ena => count[10].ENA
ena => count[11].ENA
ena => count[12].ENA
ena => count[13].ENA
ena => count[14].ENA
ena => count[15].ENA
ena => count[16].ENA
ena => count[17].ENA
ena => count[18].ENA
ena => count[19].ENA
ena => count[20].ENA
ena => count[21].ENA
ena => count[22].ENA
ena => count[23].ENA
ena => count[24].ENA
ena => count[25].ENA
ena => count[26].ENA
ena => count[27].ENA
ena => count[28].ENA
ena => count[29].ENA
ena => count[30].ENA
ena => count[31].ENA
clk <= clk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:INPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE
clk => clk.IN2
reset => reset.IN4
bus_clk => bus_clk.IN3
u_rx_data => u_rx_data.IN1
u_tx_data <= uart_port:UART_PORT.tx_data
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_tx_data <= slave_port:SLAVE_PORT.tx_data
s_split_en <= slave_port:SLAVE_PORT.split_en


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT
clk => clk.IN2
reset => reset.IN2
rx_data => rx_data.IN1
tx_data <= uart_tx:UART_TX.tx_data
send_sig => send_sig.IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
tx_busy <= uart_tx:UART_TX.tx_busy
tx_done <= uart_tx:UART_TX.tx_done
receive_sig <= uart_rx:UART_RX.receive_sig
data_in[0] <= uart_rx:UART_RX.data
data_in[1] <= uart_rx:UART_RX.data
data_in[2] <= uart_rx:UART_RX.data
data_in[3] <= uart_rx:UART_RX.data
data_in[4] <= uart_rx:UART_RX.data
data_in[5] <= uart_rx:UART_RX.data
data_in[6] <= uart_rx:UART_RX.data
data_in[7] <= uart_rx:UART_RX.data


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_tx:UART_TX
clk => tx_done~reg0.CLK
clk => tx_busy~reg0.CLK
clk => tx_data~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => state~1.DATAIN
reset => tx_done~reg0.ACLR
reset => tx_busy~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => state~3.DATAIN
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => temp_data.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => clk_count.OUTPUTSELECT
send_sig => Selector1.IN3
send_sig => Selector4.IN3
send_sig => Selector0.IN2
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|uart_port:UART_PORT|uart_rx:UART_RX
clk => receive_sig~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => bit_count[7].CLK
clk => bit_count[8].CLK
clk => bit_count[9].CLK
clk => bit_count[10].CLK
clk => bit_count[11].CLK
clk => bit_count[12].CLK
clk => bit_count[13].CLK
clk => bit_count[14].CLK
clk => bit_count[15].CLK
clk => bit_count[16].CLK
clk => bit_count[17].CLK
clk => bit_count[18].CLK
clk => bit_count[19].CLK
clk => bit_count[20].CLK
clk => bit_count[21].CLK
clk => bit_count[22].CLK
clk => bit_count[23].CLK
clk => bit_count[24].CLK
clk => bit_count[25].CLK
clk => bit_count[26].CLK
clk => bit_count[27].CLK
clk => bit_count[28].CLK
clk => bit_count[29].CLK
clk => bit_count[30].CLK
clk => bit_count[31].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => clk_count[31].CLK
clk => rx_data_2.CLK
clk => rx_data_1.CLK
clk => state~1.DATAIN
reset => receive_sig~reg0.ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => bit_count[4].ACLR
reset => bit_count[5].ACLR
reset => bit_count[6].ACLR
reset => bit_count[7].ACLR
reset => bit_count[8].ACLR
reset => bit_count[9].ACLR
reset => bit_count[10].ACLR
reset => bit_count[11].ACLR
reset => bit_count[12].ACLR
reset => bit_count[13].ACLR
reset => bit_count[14].ACLR
reset => bit_count[15].ACLR
reset => bit_count[16].ACLR
reset => bit_count[17].ACLR
reset => bit_count[18].ACLR
reset => bit_count[19].ACLR
reset => bit_count[20].ACLR
reset => bit_count[21].ACLR
reset => bit_count[22].ACLR
reset => bit_count[23].ACLR
reset => bit_count[24].ACLR
reset => bit_count[25].ACLR
reset => bit_count[26].ACLR
reset => bit_count[27].ACLR
reset => bit_count[28].ACLR
reset => bit_count[29].ACLR
reset => bit_count[30].ACLR
reset => bit_count[31].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => clk_count[31].ACLR
reset => rx_data_2.PRESET
reset => rx_data_1.PRESET
reset => state~3.DATAIN
rx_data => rx_data_1.DATAIN
receive_sig <= receive_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|bridge_module:OUTPUT_BRIDGE|bridge:BRIDGE
clk => time_count[0].CLK
clk => time_count[1].CLK
clk => time_count[2].CLK
clk => time_count[3].CLK
clk => time_count[4].CLK
clk => time_count[5].CLK
clk => time_count[6].CLK
clk => time_count[7].CLK
clk => time_count[8].CLK
clk => time_count[9].CLK
clk => time_count[10].CLK
clk => time_count[11].CLK
clk => time_count[12].CLK
clk => time_count[13].CLK
clk => time_count[14].CLK
clk => time_count[15].CLK
clk => time_count[16].CLK
clk => time_count[17].CLK
clk => time_count[18].CLK
clk => time_count[19].CLK
clk => time_count[20].CLK
clk => time_count[21].CLK
clk => time_count[22].CLK
clk => time_count[23].CLK
clk => time_count[24].CLK
clk => time_count[25].CLK
clk => time_count[26].CLK
clk => time_count[27].CLK
clk => time_count[28].CLK
clk => time_count[29].CLK
clk => time_count[30].CLK
clk => time_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => u_send_sig~reg0.CLK
clk => u_data_out[0]~reg0.CLK
clk => u_data_out[1]~reg0.CLK
clk => u_data_out[2]~reg0.CLK
clk => u_data_out[3]~reg0.CLK
clk => u_data_out[4]~reg0.CLK
clk => u_data_out[5]~reg0.CLK
clk => u_data_out[6]~reg0.CLK
clk => u_data_out[7]~reg0.CLK
clk => m_burst_num[0]~reg0.CLK
clk => m_burst_num[1]~reg0.CLK
clk => m_burst_num[2]~reg0.CLK
clk => m_burst_num[3]~reg0.CLK
clk => m_burst_num[4]~reg0.CLK
clk => m_burst_num[5]~reg0.CLK
clk => m_burst_num[6]~reg0.CLK
clk => m_burst_num[7]~reg0.CLK
clk => m_burst_num[8]~reg0.CLK
clk => m_burst_num[9]~reg0.CLK
clk => m_burst_num[10]~reg0.CLK
clk => m_burst_num[11]~reg0.CLK
clk => m_data_out[0]~reg0.CLK
clk => m_data_out[1]~reg0.CLK
clk => m_data_out[2]~reg0.CLK
clk => m_data_out[3]~reg0.CLK
clk => m_data_out[4]~reg0.CLK
clk => m_data_out[5]~reg0.CLK
clk => m_data_out[6]~reg0.CLK
clk => m_data_out[7]~reg0.CLK
clk => m_address[0]~reg0.CLK
clk => m_address[1]~reg0.CLK
clk => m_address[2]~reg0.CLK
clk => m_address[3]~reg0.CLK
clk => m_address[4]~reg0.CLK
clk => m_address[5]~reg0.CLK
clk => m_address[6]~reg0.CLK
clk => m_address[7]~reg0.CLK
clk => m_address[8]~reg0.CLK
clk => m_address[9]~reg0.CLK
clk => m_address[10]~reg0.CLK
clk => m_address[11]~reg0.CLK
clk => m_slave_select[0]~reg0.CLK
clk => m_slave_select[1]~reg0.CLK
clk => m_instruction[0]~reg0.CLK
clk => m_instruction[1]~reg0.CLK
clk => m_state.CLK
clk => u_state~1.DATAIN
bus_clk => ~NO_FANOUT~
reset => time_count[0].ACLR
reset => time_count[1].ACLR
reset => time_count[2].ACLR
reset => time_count[3].ACLR
reset => time_count[4].ACLR
reset => time_count[5].ACLR
reset => time_count[6].ACLR
reset => time_count[7].ACLR
reset => time_count[8].ACLR
reset => time_count[9].ACLR
reset => time_count[10].ACLR
reset => time_count[11].ACLR
reset => time_count[12].ACLR
reset => time_count[13].ACLR
reset => time_count[14].ACLR
reset => time_count[15].ACLR
reset => time_count[16].ACLR
reset => time_count[17].ACLR
reset => time_count[18].ACLR
reset => time_count[19].ACLR
reset => time_count[20].ACLR
reset => time_count[21].ACLR
reset => time_count[22].ACLR
reset => time_count[23].ACLR
reset => time_count[24].ACLR
reset => time_count[25].ACLR
reset => time_count[26].ACLR
reset => time_count[27].ACLR
reset => time_count[28].ACLR
reset => time_count[29].ACLR
reset => time_count[30].ACLR
reset => time_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => u_send_sig~reg0.ACLR
reset => u_data_out[0]~reg0.ACLR
reset => u_data_out[1]~reg0.ACLR
reset => u_data_out[2]~reg0.ACLR
reset => u_data_out[3]~reg0.ACLR
reset => u_data_out[4]~reg0.ACLR
reset => u_data_out[5]~reg0.ACLR
reset => u_data_out[6]~reg0.ACLR
reset => u_data_out[7]~reg0.ACLR
reset => m_burst_num[0]~reg0.ACLR
reset => m_burst_num[1]~reg0.ACLR
reset => m_burst_num[2]~reg0.ACLR
reset => m_burst_num[3]~reg0.ACLR
reset => m_burst_num[4]~reg0.ACLR
reset => m_burst_num[5]~reg0.ACLR
reset => m_burst_num[6]~reg0.ACLR
reset => m_burst_num[7]~reg0.ACLR
reset => m_burst_num[8]~reg0.ACLR
reset => m_burst_num[9]~reg0.ACLR
reset => m_burst_num[10]~reg0.ACLR
reset => m_burst_num[11]~reg0.ACLR
reset => m_data_out[0]~reg0.ACLR
reset => m_data_out[1]~reg0.ACLR
reset => m_data_out[2]~reg0.ACLR
reset => m_data_out[3]~reg0.ACLR
reset => m_data_out[4]~reg0.ACLR
reset => m_data_out[5]~reg0.ACLR
reset => m_data_out[6]~reg0.ACLR
reset => m_data_out[7]~reg0.ACLR
reset => m_address[0]~reg0.ACLR
reset => m_address[1]~reg0.ACLR
reset => m_address[2]~reg0.ACLR
reset => m_address[3]~reg0.ACLR
reset => m_address[4]~reg0.ACLR
reset => m_address[5]~reg0.ACLR
reset => m_address[6]~reg0.ACLR
reset => m_address[7]~reg0.ACLR
reset => m_address[8]~reg0.ACLR
reset => m_address[9]~reg0.ACLR
reset => m_address[10]~reg0.ACLR
reset => m_address[11]~reg0.ACLR
reset => m_slave_select[0]~reg0.PRESET
reset => m_slave_select[1]~reg0.ACLR
reset => m_instruction[0]~reg0.ACLR
reset => m_instruction[1]~reg0.ACLR
reset => m_state.ACLR
reset => u_state~3.DATAIN
m_rx_done => ~NO_FANOUT~
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_instruction.OUTPUTSELECT
m_tx_done => m_state.DATAB
m_new_rx => ~NO_FANOUT~
m_data_in[0] => ~NO_FANOUT~
m_data_in[1] => ~NO_FANOUT~
m_data_in[2] => ~NO_FANOUT~
m_data_in[3] => ~NO_FANOUT~
m_data_in[4] => ~NO_FANOUT~
m_data_in[5] => ~NO_FANOUT~
m_data_in[6] => ~NO_FANOUT~
m_data_in[7] => ~NO_FANOUT~
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[0] <= m_slave_select[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_slave_select[1] <= m_slave_select[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[0] <= m_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[1] <= m_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[2] <= m_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[3] <= m_address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[4] <= m_address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[5] <= m_address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[6] <= m_address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[7] <= m_address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[8] <= m_address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[9] <= m_address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[10] <= m_address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_address[11] <= m_address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[0] <= m_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= m_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= m_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= m_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= m_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= m_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= m_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= m_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[0] <= m_burst_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[1] <= m_burst_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[2] <= m_burst_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[3] <= m_burst_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[4] <= m_burst_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[5] <= m_burst_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[6] <= m_burst_num[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[7] <= m_burst_num[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[8] <= m_burst_num[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[9] <= m_burst_num[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[10] <= m_burst_num[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_burst_num[11] <= m_burst_num[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_address[0] => ~NO_FANOUT~
s_address[1] => ~NO_FANOUT~
s_address[2] => ~NO_FANOUT~
s_address[3] => ~NO_FANOUT~
s_address[4] => ~NO_FANOUT~
s_address[5] => ~NO_FANOUT~
s_address[6] => ~NO_FANOUT~
s_address[7] => ~NO_FANOUT~
s_address[8] => ~NO_FANOUT~
s_address[9] => ~NO_FANOUT~
s_address[10] => ~NO_FANOUT~
s_address[11] => ~NO_FANOUT~
s_data[0] => u_data_out.DATAB
s_data[1] => u_data_out.DATAB
s_data[2] => u_data_out.DATAB
s_data[3] => u_data_out.DATAB
s_data[4] => u_data_out.DATAB
s_data[5] => u_data_out.DATAB
s_data[6] => u_data_out.DATAB
s_data[7] => u_data_out.DATAB
s_read_en_in => ~NO_FANOUT~
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => u_data_out.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => time_count.OUTPUTSELECT
s_write_en_in => u_state.DATAA
s_write_en_in => u_send_sig.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector4.IN3
s_write_en_in => u_state.DATAA
s_write_en_in => u_state.DATAB
s_write_en_in => u_state.DATAB
s_write_en_in => Selector0.IN1
s_datain[0] <= <GND>
s_datain[1] <= <GND>
s_datain[2] <= <GND>
s_datain[3] <= <GND>
s_datain[4] <= <GND>
s_datain[5] <= <GND>
s_datain[6] <= <GND>
s_datain[7] <= <GND>
u_tx_busy => ~NO_FANOUT~
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => time_count.OUTPUTSELECT
u_tx_done => Selector0.IN4
u_tx_done => Selector3.IN3
u_tx_done => Selector1.IN2
u_tx_done => Selector2.IN1
u_receive_sig => always0.IN0
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_data_out.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_state.OUTPUTSELECT
u_receive_sig => u_send_sig.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => time_count.OUTPUTSELECT
u_receive_sig => Selector2.IN3
u_data_in[0] => m_data_out.DATAB
u_data_in[0] => Equal0.IN31
u_data_in[1] => m_data_out.DATAB
u_data_in[1] => Equal0.IN30
u_data_in[2] => m_data_out.DATAB
u_data_in[2] => Equal0.IN3
u_data_in[3] => m_data_out.DATAB
u_data_in[3] => Equal0.IN2
u_data_in[4] => m_data_out.DATAB
u_data_in[4] => Equal0.IN29
u_data_in[5] => m_data_out.DATAB
u_data_in[5] => Equal0.IN28
u_data_in[6] => m_data_out.DATAB
u_data_in[6] => Equal0.IN1
u_data_in[7] => m_data_out.DATAB
u_data_in[7] => Equal0.IN0
u_send_sig <= u_send_sig~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[0] <= u_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[1] <= u_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[2] <= u_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[3] <= u_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[4] <= u_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[5] <= u_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[6] <= u_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
u_data_out[7] <= u_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT
clk => clk.IN3
reset => reset.IN3
display1_pin[0] <= increment:inc1.display1_pin
display1_pin[1] <= increment:inc1.display1_pin
display1_pin[2] <= increment:inc1.display1_pin
display1_pin[3] <= increment:inc1.display1_pin
display1_pin[4] <= increment:inc1.display1_pin
display1_pin[5] <= increment:inc1.display1_pin
display1_pin[6] <= increment:inc1.display1_pin
display2_pin[0] <= increment:inc1.display2_pin
display2_pin[1] <= increment:inc1.display2_pin
display2_pin[2] <= increment:inc1.display2_pin
display2_pin[3] <= increment:inc1.display2_pin
display2_pin[4] <= increment:inc1.display2_pin
display2_pin[5] <= increment:inc1.display2_pin
display2_pin[6] <= increment:inc1.display2_pin
button => button.IN1
mode_switch => mode_switch.IN1
sw_array_data[0] => sw_array_data[0].IN1
sw_array_data[1] => sw_array_data[1].IN1
sw_array_data[2] => sw_array_data[2].IN1
sw_array_data[3] => sw_array_data[3].IN1
sw_array_data[4] => sw_array_data[4].IN1
sw_array_data[5] => sw_array_data[5].IN1
sw_array_data[6] => sw_array_data[6].IN1
sw_array_data[7] => sw_array_data[7].IN1
m_arbitor_busy => m_arbitor_busy.IN1
m_bus_busy => m_bus_busy.IN1
m_approval_grant => m_approval_grant.IN1
m_approval_request <= master_port:MASTER_PORT.approval_request
m_tx_slave_select <= master_port:MASTER_PORT.tx_slave_select
m_trans_done <= master_port:MASTER_PORT.trans_done
m_rx_data => m_rx_data.IN1
m_tx_address <= master_port:MASTER_PORT.tx_address
m_tx_data <= master_port:MASTER_PORT.tx_data
m_tx_burst_num <= master_port:MASTER_PORT.tx_burst_num
m_slave_valid => m_slave_valid.IN1
m_slave_ready => m_slave_ready.IN1
m_master_valid <= master_port:MASTER_PORT.master_valid
m_master_ready <= master_port:MASTER_PORT.master_ready
m_write_en <= master_port:MASTER_PORT.write_en
m_read_en <= master_port:MASTER_PORT.read_en
s_slave_delay[0] => s_slave_delay[0].IN1
s_slave_delay[1] => s_slave_delay[1].IN1
s_slave_delay[2] => s_slave_delay[2].IN1
s_slave_delay[3] => s_slave_delay[3].IN1
s_slave_delay[4] => s_slave_delay[4].IN1
s_slave_delay[5] => s_slave_delay[5].IN1
s_read_en => s_read_en.IN1
s_write_en => s_write_en.IN1
s_master_ready => s_master_ready.IN1
s_master_valid => s_master_valid.IN1
s_slave_valid <= slave_port:SLAVE_PORT.slave_valid
s_slave_ready <= slave_port:SLAVE_PORT.slave_ready
s_rx_address => s_rx_address.IN1
s_rx_data => s_rx_data.IN1
s_rx_burst => s_rx_burst.IN1
s_split_en <= slave_port:SLAVE_PORT.split_en
s_tx_data <= slave_port:SLAVE_PORT.tx_data


|tops_combined|top2:top_module_3|increment_module:INCREMENT|slave_port:SLAVE_PORT
clk => clk.IN1
reset => reset.IN1
slave_delay[0] => LessThan0.IN12
slave_delay[0] => LessThan1.IN8
slave_delay[1] => LessThan0.IN11
slave_delay[1] => LessThan1.IN7
slave_delay[2] => LessThan0.IN10
slave_delay[2] => LessThan1.IN6
slave_delay[3] => LessThan0.IN9
slave_delay[3] => LessThan1.IN5
slave_delay[4] => LessThan0.IN8
slave_delay[4] => LessThan1.IN4
slave_delay[5] => LessThan0.IN7
slave_delay[5] => LessThan1.IN3
read_en => slave_in_port:SLAVE_IN_PORT.read_en
read_en => always1.IN0
write_en => slave_in_port:SLAVE_IN_PORT.write_en
write_en => always1.IN1
master_ready => master_ready.IN1
master_valid => slave_in_port:SLAVE_IN_PORT.master_valid
master_valid => always1.IN1
slave_valid <= slave_valid.DB_MAX_OUTPUT_PORT_TYPE
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_address => slave_in_port:SLAVE_IN_PORT.rx_address
rx_data => slave_in_port:SLAVE_IN_PORT.rx_data
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
rx_burst => burst.DATAB
tx_data <= slave_out_port:SLAVE_OUT_PORT.tx_data
datain[0] => datain[0].IN1
datain[1] => datain[1].IN1
datain[2] => datain[2].IN1
datain[3] => datain[3].IN1
datain[4] => datain[4].IN1
datain[5] => datain[5].IN1
datain[6] => datain[6].IN1
datain[7] => datain[7].IN1
address[0] <= slave_in_port:SLAVE_IN_PORT.address[0]
address[1] <= slave_in_port:SLAVE_IN_PORT.address[1]
address[2] <= slave_in_port:SLAVE_IN_PORT.address[2]
address[3] <= slave_in_port:SLAVE_IN_PORT.address[3]
address[4] <= slave_in_port:SLAVE_IN_PORT.address[4]
address[5] <= slave_in_port:SLAVE_IN_PORT.address[5]
address[6] <= slave_in_port:SLAVE_IN_PORT.address[6]
address[7] <= slave_in_port:SLAVE_IN_PORT.address[7]
address[8] <= slave_in_port:SLAVE_IN_PORT.address[8]
address[9] <= slave_in_port:SLAVE_IN_PORT.address[9]
address[10] <= slave_in_port:SLAVE_IN_PORT.address[10]
address[11] <= slave_in_port:SLAVE_IN_PORT.address[11]
data[0] <= slave_in_port:SLAVE_IN_PORT.data[0]
data[1] <= slave_in_port:SLAVE_IN_PORT.data[1]
data[2] <= slave_in_port:SLAVE_IN_PORT.data[2]
data[3] <= slave_in_port:SLAVE_IN_PORT.data[3]
data[4] <= slave_in_port:SLAVE_IN_PORT.data[4]
data[5] <= slave_in_port:SLAVE_IN_PORT.data[5]
data[6] <= slave_in_port:SLAVE_IN_PORT.data[6]
data[7] <= slave_in_port:SLAVE_IN_PORT.data[7]
read_en_in <= slave_in_port:SLAVE_IN_PORT.read_en_in
write_en_in <= slave_in_port:SLAVE_IN_PORT.write_en_in
split_en <= split_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_in_port:SLAVE_IN_PORT
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => rx_done~reg0.CLK
clk => address[0]~reg0.CLK
clk => address[1]~reg0.CLK
clk => address[2]~reg0.CLK
clk => address[3]~reg0.CLK
clk => address[4]~reg0.CLK
clk => address[5]~reg0.CLK
clk => address[6]~reg0.CLK
clk => address[7]~reg0.CLK
clk => address[8]~reg0.CLK
clk => address[9]~reg0.CLK
clk => address[10]~reg0.CLK
clk => address[11]~reg0.CLK
clk => burst_counter[0]~reg0.CLK
clk => burst_counter[1]~reg0.CLK
clk => burst_counter[2]~reg0.CLK
clk => burst_counter[3]~reg0.CLK
clk => burst_counter[4]~reg0.CLK
clk => burst_counter[5]~reg0.CLK
clk => burst_counter[6]~reg0.CLK
clk => burst_counter[7]~reg0.CLK
clk => burst_counter[8]~reg0.CLK
clk => burst_counter[9]~reg0.CLK
clk => burst_counter[10]~reg0.CLK
clk => burst_counter[11]~reg0.CLK
clk => write_en_in1~reg0.CLK
clk => read_en_in1~reg0.CLK
clk => addr_idle.CLK
clk => addr_counter[0]~reg0.CLK
clk => addr_counter[1]~reg0.CLK
clk => addr_counter[2]~reg0.CLK
clk => addr_counter[3]~reg0.CLK
clk => data_state~1.DATAIN
clk => addr_state~1.DATAIN
reset => data_idle.PRESET
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => data_counter[3].ACLR
reset => burst_counter[0]~reg0.ACLR
reset => burst_counter[1]~reg0.ACLR
reset => burst_counter[2]~reg0.ACLR
reset => burst_counter[3]~reg0.ACLR
reset => burst_counter[4]~reg0.ACLR
reset => burst_counter[5]~reg0.ACLR
reset => burst_counter[6]~reg0.ACLR
reset => burst_counter[7]~reg0.ACLR
reset => burst_counter[8]~reg0.ACLR
reset => burst_counter[9]~reg0.ACLR
reset => burst_counter[10]~reg0.ACLR
reset => burst_counter[11]~reg0.ACLR
reset => write_en_in1~reg0.ACLR
reset => read_en_in1~reg0.ACLR
reset => addr_idle.PRESET
reset => addr_counter[0]~reg0.ACLR
reset => addr_counter[1]~reg0.ACLR
reset => addr_counter[2]~reg0.ACLR
reset => addr_counter[3]~reg0.ACLR
reset => data_state~3.DATAIN
reset => addr_state~3.DATAIN
reset => address[11]~reg0.ENA
reset => address[10]~reg0.ENA
reset => address[9]~reg0.ENA
reset => address[8]~reg0.ENA
reset => address[7]~reg0.ENA
reset => address[6]~reg0.ENA
reset => address[5]~reg0.ENA
reset => address[4]~reg0.ENA
reset => address[3]~reg0.ENA
reset => address[2]~reg0.ENA
reset => address[1]~reg0.ENA
reset => address[0]~reg0.ENA
reset => data[0]~reg0.ENA
reset => rx_done~reg0.ENA
reset => data[7]~reg0.ENA
reset => data[6]~reg0.ENA
reset => data[5]~reg0.ENA
reset => data[4]~reg0.ENA
reset => data[3]~reg0.ENA
reset => data[2]~reg0.ENA
reset => data[1]~reg0.ENA
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_address => address.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
rx_data => data.DATAB
master_valid => handshake.IN1
read_en => read_en_in1.DATAB
write_en => write_en_in1.DATAB
write_en => always1.IN1
slave_valid => ~NO_FANOUT~
master_ready => always0.IN1
burst[0] => always0.IN1
burst[0] => always0.IN1
burst[1] => LessThan2.IN12
burst[2] => LessThan2.IN11
burst[3] => LessThan2.IN10
burst[4] => LessThan2.IN9
burst[5] => LessThan2.IN8
burst[6] => LessThan2.IN7
burst[7] => LessThan2.IN6
burst[8] => LessThan2.IN5
burst[9] => LessThan2.IN4
burst[10] => LessThan2.IN3
burst[11] => LessThan2.IN2
burst[12] => LessThan2.IN1
slave_ready <= slave_ready.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= address[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= address[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= address[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= address[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= address[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= address[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= address[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= address[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in1 <= read_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en_in1 <= write_en_in1~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en_in <= read_en_in.DB_MAX_OUTPUT_PORT_TYPE
write_en_in <= write_en_in.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[0] <= burst_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[1] <= burst_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[2] <= burst_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[3] <= burst_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[4] <= burst_counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[5] <= burst_counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[6] <= burst_counter[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[7] <= burst_counter[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[8] <= burst_counter[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[9] <= burst_counter[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[10] <= burst_counter[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
burst_counter[11] <= burst_counter[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[0] <= addr_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[1] <= addr_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[2] <= addr_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_counter[3] <= addr_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|slave_port:SLAVE_PORT|slave_out_port:SLAVE_OUT_PORT
clk => slave_tx_done~reg0.CLK
clk => data_idle.CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => data_counter[3].CLK
clk => tx_data~reg0.CLK
clk => data_state~1.DATAIN
reset => data_state~3.DATAIN
reset => slave_tx_done~reg0.ENA
reset => tx_data~reg0.ENA
reset => data_counter[3].ENA
reset => data_counter[2].ENA
reset => data_counter[1].ENA
reset => data_counter[0].ENA
reset => data_idle.ENA
master_ready => handshake.IN0
datain[0] => Mux0.IN7
datain[1] => Mux0.IN6
datain[1] => tx_data.DATAB
datain[2] => Mux0.IN5
datain[3] => Mux0.IN4
datain[4] => Mux0.IN3
datain[5] => Mux0.IN2
datain[6] => Mux0.IN1
datain[7] => Mux0.IN0
slave_valid => handshake.IN1
slave_ready <= data_idle.DB_MAX_OUTPUT_PORT_TYPE
slave_tx_done <= slave_tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|master_port:MASTER_PORT
clk => clk.IN2
reset => reset.IN2
instruction[0] => instruction[0].IN2
instruction[1] => instruction[1].IN2
slave_select[0] => slave_select[0].IN1
slave_select[1] => slave_select[1].IN1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
data_out[0] => data_out[0].IN1
data_out[1] => data_out[1].IN1
data_out[2] => data_out[2].IN1
data_out[3] => data_out[3].IN1
data_out[4] => data_out[4].IN1
data_out[5] => data_out[5].IN1
data_out[6] => data_out[6].IN1
data_out[7] => data_out[7].IN1
burst_num[0] => burst_num[0].IN2
burst_num[1] => burst_num[1].IN2
burst_num[2] => burst_num[2].IN2
burst_num[3] => burst_num[3].IN2
burst_num[4] => burst_num[4].IN2
burst_num[5] => burst_num[5].IN2
burst_num[6] => burst_num[6].IN2
burst_num[7] => burst_num[7].IN2
burst_num[8] => burst_num[8].IN2
burst_num[9] => burst_num[9].IN2
burst_num[10] => burst_num[10].IN2
burst_num[11] => burst_num[11].IN2
data_in[0] <= master_in_port:MASTER_IN_PORT.data
data_in[1] <= master_in_port:MASTER_IN_PORT.data
data_in[2] <= master_in_port:MASTER_IN_PORT.data
data_in[3] <= master_in_port:MASTER_IN_PORT.data
data_in[4] <= master_in_port:MASTER_IN_PORT.data
data_in[5] <= master_in_port:MASTER_IN_PORT.data
data_in[6] <= master_in_port:MASTER_IN_PORT.data
data_in[7] <= master_in_port:MASTER_IN_PORT.data
rx_done <= rx_done.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= master_in_port:MASTER_IN_PORT.new_rx
arbitor_busy => arbitor_busy.IN1
bus_busy => bus_busy.IN1
approval_grant => approval_grant.IN1
approval_request <= master_out_port:MASTER_OUT_PORT.approval_request
tx_slave_select <= master_out_port:MASTER_OUT_PORT.tx_slave_select
trans_done <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
rx_data => rx_data.IN1
tx_address <= master_out_port:MASTER_OUT_PORT.tx_address
tx_data <= master_out_port:MASTER_OUT_PORT.tx_data
tx_burst_num <= master_out_port:MASTER_OUT_PORT.tx_burst_num
slave_valid => slave_valid.IN1
slave_ready => slave_ready.IN1
master_valid <= master_out_port:MASTER_OUT_PORT.master_valid
master_ready <= master_ready.DB_MAX_OUTPUT_PORT_TYPE
write_en <= master_out_port:MASTER_OUT_PORT.write_en
read_en <= master_out_port:MASTER_OUT_PORT.read_en


|tops_combined|top2:top_module_3|increment_module:INCREMENT|master_port:MASTER_PORT|master_in_port:MASTER_IN_PORT
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => master_ready~reg0.CLK
clk => new_rx~reg0.CLK
clk => rx_done~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => master_ready~reg0.PRESET
reset => new_rx~reg0.ACLR
reset => rx_done~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => data[0]~reg0.ACLR
reset => data[1]~reg0.ACLR
reset => data[2]~reg0.ACLR
reset => data[3]~reg0.ACLR
reset => data[4]~reg0.ACLR
reset => data[5]~reg0.ACLR
reset => data[6]~reg0.ACLR
reset => data[7]~reg0.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
tx_done => always0.IN1
instruction[0] => Equal0.IN1
instruction[1] => Equal0.IN0
burst_num[0] => LessThan1.IN32
burst_num[1] => LessThan1.IN31
burst_num[2] => LessThan1.IN30
burst_num[3] => LessThan1.IN29
burst_num[4] => LessThan1.IN28
burst_num[5] => LessThan1.IN27
burst_num[6] => LessThan1.IN26
burst_num[7] => LessThan1.IN25
burst_num[8] => LessThan1.IN24
burst_num[9] => LessThan1.IN23
burst_num[10] => LessThan1.IN22
burst_num[11] => LessThan1.IN21
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_rx <= new_rx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => temp_data.DATAB
rx_data => data.DATAB
slave_valid => always0.IN1
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|master_port:MASTER_PORT|master_out_port:MASTER_OUT_PORT
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => tx_burst_num~reg0.CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => burst_count[0].CLK
clk => burst_count[1].CLK
clk => burst_count[2].CLK
clk => burst_count[3].CLK
clk => burst_count[4].CLK
clk => burst_count[5].CLK
clk => burst_count[6].CLK
clk => burst_count[7].CLK
clk => burst_count[8].CLK
clk => burst_count[9].CLK
clk => burst_count[10].CLK
clk => burst_count[11].CLK
clk => burst_count[12].CLK
clk => burst_count[13].CLK
clk => burst_count[14].CLK
clk => burst_count[15].CLK
clk => burst_count[16].CLK
clk => burst_count[17].CLK
clk => burst_count[18].CLK
clk => burst_count[19].CLK
clk => burst_count[20].CLK
clk => burst_count[21].CLK
clk => burst_count[22].CLK
clk => burst_count[23].CLK
clk => burst_count[24].CLK
clk => burst_count[25].CLK
clk => burst_count[26].CLK
clk => burst_count[27].CLK
clk => burst_count[28].CLK
clk => burst_count[29].CLK
clk => burst_count[30].CLK
clk => burst_count[31].CLK
clk => tx_done~reg0.CLK
clk => tx_data~reg0.CLK
clk => tx_address~reg0.CLK
clk => read_en~reg0.CLK
clk => write_en~reg0.CLK
clk => master_valid~reg0.CLK
clk => tx_slave_select~reg0.CLK
clk => approval_request~reg0.CLK
clk => master_ready~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset => count2[0].ACLR
reset => count2[1].ACLR
reset => count2[2].ACLR
reset => count2[3].ACLR
reset => count2[4].ACLR
reset => count2[5].ACLR
reset => count2[6].ACLR
reset => count2[7].ACLR
reset => count2[8].ACLR
reset => count2[9].ACLR
reset => count2[10].ACLR
reset => count2[11].ACLR
reset => count2[12].ACLR
reset => count2[13].ACLR
reset => count2[14].ACLR
reset => count2[15].ACLR
reset => count2[16].ACLR
reset => count2[17].ACLR
reset => count2[18].ACLR
reset => count2[19].ACLR
reset => count2[20].ACLR
reset => count2[21].ACLR
reset => count2[22].ACLR
reset => count2[23].ACLR
reset => count2[24].ACLR
reset => count2[25].ACLR
reset => count2[26].ACLR
reset => count2[27].ACLR
reset => count2[28].ACLR
reset => count2[29].ACLR
reset => count2[30].ACLR
reset => count2[31].ACLR
reset => tx_burst_num~reg0.ACLR
reset => temp_data[0].ACLR
reset => temp_data[1].ACLR
reset => temp_data[2].ACLR
reset => temp_data[3].ACLR
reset => temp_data[4].ACLR
reset => temp_data[5].ACLR
reset => temp_data[6].ACLR
reset => temp_data[7].ACLR
reset => burst_count[0].ACLR
reset => burst_count[1].ACLR
reset => burst_count[2].ACLR
reset => burst_count[3].ACLR
reset => burst_count[4].ACLR
reset => burst_count[5].ACLR
reset => burst_count[6].ACLR
reset => burst_count[7].ACLR
reset => burst_count[8].ACLR
reset => burst_count[9].ACLR
reset => burst_count[10].ACLR
reset => burst_count[11].ACLR
reset => burst_count[12].ACLR
reset => burst_count[13].ACLR
reset => burst_count[14].ACLR
reset => burst_count[15].ACLR
reset => burst_count[16].ACLR
reset => burst_count[17].ACLR
reset => burst_count[18].ACLR
reset => burst_count[19].ACLR
reset => burst_count[20].ACLR
reset => burst_count[21].ACLR
reset => burst_count[22].ACLR
reset => burst_count[23].ACLR
reset => burst_count[24].ACLR
reset => burst_count[25].ACLR
reset => burst_count[26].ACLR
reset => burst_count[27].ACLR
reset => burst_count[28].ACLR
reset => burst_count[29].ACLR
reset => burst_count[30].ACLR
reset => burst_count[31].ACLR
reset => tx_done~reg0.ACLR
reset => tx_data~reg0.ACLR
reset => tx_address~reg0.ACLR
reset => read_en~reg0.ACLR
reset => write_en~reg0.ACLR
reset => master_valid~reg0.ACLR
reset => tx_slave_select~reg0.ACLR
reset => approval_request~reg0.ACLR
reset => master_ready~reg0.PRESET
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => state~3.DATAIN
slave_select[0] => Selector0.IN3
slave_select[1] => Selector0.IN2
instruction[0] => read_en.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => state.DATAB
instruction[0] => tx_done.DATAB
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => state.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => temp_data.OUTPUTSELECT
instruction[0] => tx_done.OUTPUTSELECT
instruction[0] => write_en.DATAB
instruction[0] => state.DATAB
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => count.OUTPUTSELECT
instruction[1] => state.OUTPUTSELECT
instruction[1] => approval_request.OUTPUTSELECT
instruction[1] => tx_slave_select.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => burst_count.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => temp_data.OUTPUTSELECT
instruction[1] => Selector51.IN2
instruction[1] => Selector33.IN2
address[0] => Mux0.IN15
address[1] => Mux0.IN14
address[2] => Mux0.IN13
address[3] => Mux0.IN12
address[4] => Mux0.IN11
address[5] => Mux0.IN10
address[6] => Mux0.IN9
address[7] => Mux0.IN8
address[8] => Mux0.IN7
address[9] => Mux0.IN6
address[10] => Mux0.IN5
address[11] => Mux0.IN4
data[0] => temp_data.DATAB
data[1] => temp_data.DATAB
data[2] => temp_data.DATAB
data[3] => temp_data.DATAB
data[4] => temp_data.DATAB
data[5] => temp_data.DATAB
data[6] => temp_data.DATAB
data[7] => temp_data.DATAB
burst_num[0] => Mux2.IN15
burst_num[0] => Mux3.IN15
burst_num[0] => LessThan7.IN32
burst_num[0] => Equal0.IN31
burst_num[1] => Mux2.IN14
burst_num[1] => Mux3.IN14
burst_num[1] => LessThan7.IN31
burst_num[1] => Equal0.IN30
burst_num[2] => Mux2.IN13
burst_num[2] => Mux3.IN13
burst_num[2] => LessThan7.IN30
burst_num[2] => Equal0.IN29
burst_num[3] => Mux2.IN12
burst_num[3] => Mux3.IN12
burst_num[3] => LessThan7.IN29
burst_num[3] => Equal0.IN28
burst_num[4] => Mux2.IN11
burst_num[4] => Mux3.IN11
burst_num[4] => LessThan7.IN28
burst_num[4] => Equal0.IN27
burst_num[5] => Mux2.IN10
burst_num[5] => Mux3.IN10
burst_num[5] => LessThan7.IN27
burst_num[5] => Equal0.IN26
burst_num[6] => Mux2.IN9
burst_num[6] => Mux3.IN9
burst_num[6] => LessThan7.IN26
burst_num[6] => Equal0.IN25
burst_num[7] => Mux2.IN8
burst_num[7] => Mux3.IN8
burst_num[7] => LessThan7.IN25
burst_num[7] => Equal0.IN24
burst_num[8] => Mux2.IN7
burst_num[8] => Mux3.IN7
burst_num[8] => LessThan7.IN24
burst_num[8] => Equal0.IN23
burst_num[9] => Mux2.IN6
burst_num[9] => Mux3.IN6
burst_num[9] => LessThan7.IN23
burst_num[9] => Equal0.IN22
burst_num[10] => Mux2.IN5
burst_num[10] => Mux3.IN5
burst_num[10] => LessThan7.IN22
burst_num[10] => Equal0.IN21
burst_num[11] => Mux2.IN4
burst_num[11] => Mux3.IN4
burst_num[11] => LessThan7.IN21
burst_num[11] => Equal0.IN20
rx_done => Selector33.IN4
rx_done => Selector50.IN8
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_ready => always0.IN1
arbitor_busy => always0.IN0
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => count.OUTPUTSELECT
bus_busy => tx_slave_select.OUTPUTSELECT
bus_busy => state.DATAB
bus_busy => Selector45.IN3
bus_busy => approval_request.DATAA
bus_busy => always0.IN1
bus_busy => state.DATAB
bus_busy => Selector36.IN1
bus_busy => state.DATAA
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => count.OUTPUTSELECT
approval_grant => state.OUTPUTSELECT
approval_grant => approval_request.OUTPUTSELECT
approval_grant => tx_slave_select.OUTPUTSELECT
approval_grant => write_en.OUTPUTSELECT
approval_grant => read_en.OUTPUTSELECT
approval_grant => tx_address.OUTPUTSELECT
approval_grant => tx_data.OUTPUTSELECT
approval_grant => tx_burst_num.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => count2.OUTPUTSELECT
approval_grant => Selector37.IN3
approval_grant => Selector54.IN4
master_ready <= master_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
approval_request <= approval_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_slave_select <= tx_slave_select~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_valid <= master_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_en <= write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_en <= read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_address <= tx_address~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data <= tx_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_burst_num <= tx_burst_num~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|increment:inc1
clk => clk.IN2
reset => reset.IN2
display1_pin[0] <= bin27:DISPLAY1.io_seven
display1_pin[1] <= bin27:DISPLAY1.io_seven
display1_pin[2] <= bin27:DISPLAY1.io_seven
display1_pin[3] <= bin27:DISPLAY1.io_seven
display1_pin[4] <= bin27:DISPLAY1.io_seven
display1_pin[5] <= bin27:DISPLAY1.io_seven
display1_pin[6] <= bin27:DISPLAY1.io_seven
display2_pin[0] <= bin27:DISPLAY2.io_seven
display2_pin[1] <= bin27:DISPLAY2.io_seven
display2_pin[2] <= bin27:DISPLAY2.io_seven
display2_pin[3] <= bin27:DISPLAY2.io_seven
display2_pin[4] <= bin27:DISPLAY2.io_seven
display2_pin[5] <= bin27:DISPLAY2.io_seven
display2_pin[6] <= bin27:DISPLAY2.io_seven
button => always0.IN0
mode_switch => always0.IN0
mode_switch => always0.IN1
sw_array_data[0] => output_data.DATAB
sw_array_data[1] => output_data.DATAB
sw_array_data[2] => output_data.DATAB
sw_array_data[3] => output_data.DATAB
sw_array_data[4] => output_data.DATAB
sw_array_data[5] => output_data.DATAB
sw_array_data[6] => output_data.DATAB
sw_array_data[7] => output_data.DATAB
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => inc_state.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => data_to_master.OUTPUTSELECT
m_tx_done => Selector17.IN1
m_data_out[0] <= data_to_master[0].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[1] <= data_to_master[1].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[2] <= data_to_master[2].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[3] <= data_to_master[3].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[4] <= data_to_master[4].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[5] <= data_to_master[5].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[6] <= data_to_master[6].DB_MAX_OUTPUT_PORT_TYPE
m_data_out[7] <= data_to_master[7].DB_MAX_OUTPUT_PORT_TYPE
m_instruction[0] <= m_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m_instruction[1] <= m_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_data[0] => output_data.DATAB
s_data[1] => output_data.DATAB
s_data[2] => output_data.DATAB
s_data[3] => output_data.DATAB
s_data[4] => output_data.DATAB
s_data[5] => output_data.DATAB
s_data[6] => output_data.DATAB
s_data[7] => output_data.DATAB
s_write_en_in => always0.IN1


|tops_combined|top2:top_module_3|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_3|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY1|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
io_bin[0] => display_io_bin[0].IN1
io_bin[1] => display_io_bin[1].IN1
io_bin[2] => display_io_bin[2].IN1
io_bin[3] => display_io_bin[3].IN1
io_seven[0] <= decoder:display.io_seven
io_seven[1] <= decoder:display.io_seven
io_seven[2] <= decoder:display.io_seven
io_seven[3] <= decoder:display.io_seven
io_seven[4] <= decoder:display.io_seven
io_seven[5] <= decoder:display.io_seven
io_seven[6] <= decoder:display.io_seven


|tops_combined|top2:top_module_3|increment_module:INCREMENT|increment:inc1|bin27:DISPLAY2|decoder:display
io_bin[0] => Equal0.IN7
io_bin[0] => Equal1.IN7
io_bin[0] => Equal2.IN7
io_bin[0] => Equal3.IN7
io_bin[0] => Equal4.IN7
io_bin[0] => Equal5.IN7
io_bin[0] => Equal6.IN7
io_bin[0] => Equal7.IN7
io_bin[0] => Equal8.IN7
io_bin[0] => Equal9.IN7
io_bin[0] => Equal10.IN7
io_bin[0] => Equal11.IN7
io_bin[0] => Equal12.IN7
io_bin[0] => Equal13.IN7
io_bin[0] => Equal14.IN7
io_bin[0] => Equal15.IN7
io_bin[1] => Equal0.IN6
io_bin[1] => Equal1.IN6
io_bin[1] => Equal2.IN6
io_bin[1] => Equal3.IN6
io_bin[1] => Equal4.IN6
io_bin[1] => Equal5.IN6
io_bin[1] => Equal6.IN6
io_bin[1] => Equal7.IN6
io_bin[1] => Equal8.IN6
io_bin[1] => Equal9.IN6
io_bin[1] => Equal10.IN6
io_bin[1] => Equal11.IN6
io_bin[1] => Equal12.IN6
io_bin[1] => Equal13.IN6
io_bin[1] => Equal14.IN6
io_bin[1] => Equal15.IN6
io_bin[2] => Equal0.IN5
io_bin[2] => Equal1.IN5
io_bin[2] => Equal2.IN5
io_bin[2] => Equal3.IN5
io_bin[2] => Equal4.IN5
io_bin[2] => Equal5.IN5
io_bin[2] => Equal6.IN5
io_bin[2] => Equal7.IN5
io_bin[2] => Equal8.IN5
io_bin[2] => Equal9.IN5
io_bin[2] => Equal10.IN5
io_bin[2] => Equal11.IN5
io_bin[2] => Equal12.IN5
io_bin[2] => Equal13.IN5
io_bin[2] => Equal14.IN5
io_bin[2] => Equal15.IN5
io_bin[3] => Equal0.IN4
io_bin[3] => Equal1.IN4
io_bin[3] => Equal2.IN4
io_bin[3] => Equal3.IN4
io_bin[3] => Equal4.IN4
io_bin[3] => Equal5.IN4
io_bin[3] => Equal6.IN4
io_bin[3] => Equal7.IN4
io_bin[3] => Equal8.IN4
io_bin[3] => Equal9.IN4
io_bin[3] => Equal10.IN4
io_bin[3] => Equal11.IN4
io_bin[3] => Equal12.IN4
io_bin[3] => Equal13.IN4
io_bin[3] => Equal14.IN4
io_bin[3] => Equal15.IN4
io_seven[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[3] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[5] <= comb.DB_MAX_OUTPUT_PORT_TYPE
io_seven[6] <= comb.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|Bus_interconnect:BUS
sys_clk => sys_clk.IN1
sys_rst => sys_rst.IN1
m1_request => m1_request.IN1
m2_request => m2_request.IN1
m1_slave_sel => m1_slave_sel.IN1
m2_slave_sel => m2_slave_sel.IN1
trans_done => trans_done.IN1
m1_grant <= Bus_Arbiter:Bus_Arbiter1.m1_grant
m2_grant <= Bus_Arbiter:Bus_Arbiter1.m2_grant
arbiter_busy <= Bus_Arbiter:Bus_Arbiter1.arbiter_busy
bus_busy <= Bus_Arbiter:Bus_Arbiter1.bus_busy
m1_clk => m1_clk.IN1
m1_rst => m1_rst.IN1
m1_master_valid => m1_master_valid.IN1
m1_master_ready => m1_master_ready.IN1
m1_tx_address => m1_tx_address.IN1
m1_tx_data => m1_tx_data.IN1
m1_rx_data <= Bus_mux:Bus_mux1.m1_rx_data
m1_write_en => m1_write_en.IN1
m1_read_en => m1_read_en.IN1
m1_slave_valid <= Bus_mux:Bus_mux1.m1_slave_valid
m1_slave_ready <= Bus_mux:Bus_mux1.m1_slave_ready
m2_clk => m2_clk.IN1
m2_rst => m2_rst.IN1
m2_master_valid => m2_master_valid.IN1
m2_master_ready => m2_master_ready.IN1
m2_tx_address => m2_tx_address.IN1
m2_tx_data => m2_tx_data.IN1
m2_rx_data <= Bus_mux:Bus_mux1.m2_rx_data
m2_write_en => m2_write_en.IN1
m2_read_en => m2_read_en.IN1
m2_slave_valid <= Bus_mux:Bus_mux1.m2_slave_valid
m2_slave_ready <= Bus_mux:Bus_mux1.m2_slave_ready
s1_clk <= Bus_mux:Bus_mux1.s1_clk
s1_rst <= Bus_mux:Bus_mux1.s1_rst
s1_master_valid <= Bus_mux:Bus_mux1.s1_master_valid
s1_master_ready <= Bus_mux:Bus_mux1.s1_master_ready
s1_rx_address <= Bus_mux:Bus_mux1.s1_rx_address
s1_rx_data <= Bus_mux:Bus_mux1.s1_rx_data
s1_tx_data => s1_tx_data.IN1
s1_write_en <= Bus_mux:Bus_mux1.s1_write_en
s1_read_en <= Bus_mux:Bus_mux1.s1_read_en
s1_slave_valid => s1_slave_valid.IN1
s1_slave_ready => s1_slave_ready.IN1
s2_clk <= Bus_mux:Bus_mux1.s2_clk
s2_rst <= Bus_mux:Bus_mux1.s2_rst
s2_master_valid <= Bus_mux:Bus_mux1.s2_master_valid
s2_master_ready <= Bus_mux:Bus_mux1.s2_master_ready
s2_rx_address <= Bus_mux:Bus_mux1.s2_rx_address
s2_rx_data <= Bus_mux:Bus_mux1.s2_rx_data
s2_tx_data => s2_tx_data.IN1
s2_write_en <= Bus_mux:Bus_mux1.s2_write_en
s2_read_en <= Bus_mux:Bus_mux1.s2_read_en
s2_slave_valid => s2_slave_valid.IN1
s2_slave_ready => s2_slave_ready.IN1
s3_clk <= Bus_mux:Bus_mux1.s3_clk
s3_rst <= Bus_mux:Bus_mux1.s3_rst
s3_master_valid <= Bus_mux:Bus_mux1.s3_master_valid
s3_master_ready <= Bus_mux:Bus_mux1.s3_master_ready
s3_rx_address <= Bus_mux:Bus_mux1.s3_rx_address
s3_rx_data <= Bus_mux:Bus_mux1.s3_rx_data
s3_tx_data => s3_tx_data.IN1
s3_write_en <= Bus_mux:Bus_mux1.s3_write_en
s3_read_en <= Bus_mux:Bus_mux1.s3_read_en
s3_slave_valid => s3_slave_valid.IN1
s3_slave_ready => s3_slave_ready.IN1
s1_slave_split_en => s1_slave_split_en.IN1
s2_slave_split_en => s2_slave_split_en.IN1
s3_slave_split_en => s3_slave_split_en.IN1
m1_tx_burst_num => m1_tx_burst_num.IN1
m2_tx_burst_num => m2_tx_burst_num.IN1
s1_rx_burst_num <= Bus_mux:Bus_mux1.s1_rx_burst_num
s2_rx_burst_num <= Bus_mux:Bus_mux1.s2_rx_burst_num
s3_rx_burst_num <= Bus_mux:Bus_mux1.s3_rx_burst_num


|tops_combined|top2:top_module_3|Bus_interconnect:BUS|Bus_Arbiter:Bus_Arbiter1
sys_clk => previous_slave_sel[0].CLK
sys_clk => previous_slave_sel[1].CLK
sys_clk => previous_grant[0].CLK
sys_clk => previous_grant[1].CLK
sys_clk => previous_m2_grant.CLK
sys_clk => previous_m1_grant.CLK
sys_clk => bus_busy~reg0.CLK
sys_clk => arbiter_busy~reg0.CLK
sys_clk => slave_sel[0]~reg0.CLK
sys_clk => slave_sel[1]~reg0.CLK
sys_clk => bus_grant[0]~reg0.CLK
sys_clk => bus_grant[1]~reg0.CLK
sys_clk => m2_grant~reg0.CLK
sys_clk => m1_grant~reg0.CLK
sys_clk => rx_m2_slave[0].CLK
sys_clk => rx_m2_slave[1].CLK
sys_clk => rx_m1_slave[0].CLK
sys_clk => rx_m1_slave[1].CLK
sys_clk => slave_sel_done.CLK
sys_clk => arbiter_state~1.DATAIN
sys_clk => slave_addr_state~1.DATAIN
sys_rst => bus_busy~reg0.ACLR
sys_rst => arbiter_busy~reg0.ACLR
sys_rst => slave_sel[0]~reg0.ACLR
sys_rst => slave_sel[1]~reg0.ACLR
sys_rst => bus_grant[0]~reg0.ACLR
sys_rst => bus_grant[1]~reg0.ACLR
sys_rst => m2_grant~reg0.ACLR
sys_rst => m1_grant~reg0.ACLR
sys_rst => rx_m2_slave[0].ACLR
sys_rst => rx_m2_slave[1].ACLR
sys_rst => rx_m1_slave[0].ACLR
sys_rst => rx_m1_slave[1].ACLR
sys_rst => slave_sel_done.ACLR
sys_rst => arbiter_state~3.DATAIN
sys_rst => slave_addr_state~3.DATAIN
sys_rst => previous_slave_sel[0].ENA
sys_rst => previous_m1_grant.ENA
sys_rst => previous_m2_grant.ENA
sys_rst => previous_grant[1].ENA
sys_rst => previous_grant[0].ENA
sys_rst => previous_slave_sel[1].ENA
m1_request => start.IN0
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => arbiter_state.OUTPUTSELECT
m1_request => m1_grant.OUTPUTSELECT
m1_request => m2_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => bus_grant.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => slave_sel.OUTPUTSELECT
m1_request => arbiter_busy.OUTPUTSELECT
m1_request => bus_busy.OUTPUTSELECT
m1_request => Selector3.IN3
m1_request => Selector7.IN3
m2_request => start.IN1
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => arbiter_state.OUTPUTSELECT
m2_request => m1_grant.OUTPUTSELECT
m2_request => m2_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => bus_grant.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => slave_sel.OUTPUTSELECT
m2_request => arbiter_busy.OUTPUTSELECT
m2_request => bus_busy.OUTPUTSELECT
m2_request => arbiter_state.DATAA
m2_request => arbiter_busy.DATAA
m2_request => arbiter_state.DATAA
m1_slave_sel => rx_m1_slave.DATAB
m1_slave_sel => rx_m1_slave[1].DATAIN
m2_slave_sel => rx_m2_slave.DATAB
m2_slave_sel => rx_m2_slave[1].DATAIN
trans_done => arbiter_state.OUTPUTSELECT
trans_done => bus_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => previous_m1_grant.OUTPUTSELECT
trans_done => previous_m2_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_grant.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => previous_slave_sel.OUTPUTSELECT
trans_done => arbiter_busy.OUTPUTSELECT
trans_done => m1_grant.OUTPUTSELECT
trans_done => m2_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => bus_grant.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => slave_sel.OUTPUTSELECT
trans_done => Selector2.IN3
trans_done => Selector5.IN4
trans_done => Selector9.IN3
s1_slave_split_en => comb.IN0
s2_slave_split_en => comb.IN1
s3_slave_split_en => slave_split_en.IN1
m1_grant <= m1_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2_grant <= m2_grant~reg0.DB_MAX_OUTPUT_PORT_TYPE
arbiter_busy <= arbiter_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_busy <= bus_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[0] <= bus_grant[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bus_grant[1] <= bus_grant[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[0] <= slave_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slave_sel[1] <= slave_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tops_combined|top2:top_module_3|Bus_interconnect:BUS|Bus_mux:Bus_mux1
bus_grant[0] => Equal2.IN0
bus_grant[0] => Equal4.IN1
bus_grant[1] => Equal2.IN1
bus_grant[1] => Equal4.IN0
slave_sel[0] => Equal0.IN0
slave_sel[0] => Equal1.IN1
slave_sel[0] => Equal3.IN1
slave_sel[1] => Equal0.IN1
slave_sel[1] => Equal1.IN0
slave_sel[1] => Equal3.IN0
m1_clk => s1_clk.DATAB
m1_clk => s2_clk.DATAB
m1_clk => s3_clk.DATAB
m1_rst => s1_rst.DATAB
m1_rst => s2_rst.DATAB
m1_rst => s3_rst.DATAB
m1_master_valid => s1_master_valid.DATAB
m1_master_valid => s2_master_valid.DATAB
m1_master_valid => s3_master_valid.DATAB
m1_master_ready => s1_master_ready.DATAB
m1_master_ready => s2_master_ready.DATAB
m1_master_ready => s3_master_ready.DATAB
m1_tx_address => s1_rx_address.DATAB
m1_tx_address => s2_rx_address.DATAB
m1_tx_address => s3_rx_address.DATAB
m1_tx_data => s1_rx_data.DATAB
m1_tx_data => s2_rx_data.DATAB
m1_tx_data => s3_rx_data.DATAB
m1_rx_data <= m1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m1_write_en => s1_write_en.DATAB
m1_write_en => s2_write_en.DATAB
m1_write_en => s3_write_en.DATAB
m1_read_en => s1_read_en.DATAB
m1_read_en => s2_read_en.DATAB
m1_read_en => s3_read_en.DATAB
m1_slave_valid <= m1_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m1_slave_ready <= m1_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m1_tx_burst_num => s1_rx_burst_num.DATAB
m1_tx_burst_num => s2_rx_burst_num.DATAB
m1_tx_burst_num => s3_rx_burst_num.DATAB
m2_clk => s1_clk.DATAB
m2_clk => s2_clk.DATAB
m2_clk => s3_clk.DATAB
m2_rst => s1_rst.DATAB
m2_rst => s2_rst.DATAB
m2_rst => s3_rst.DATAB
m2_master_valid => s1_master_valid.DATAB
m2_master_valid => s2_master_valid.DATAB
m2_master_valid => s3_master_valid.DATAB
m2_master_ready => s1_master_ready.DATAB
m2_master_ready => s2_master_ready.DATAB
m2_master_ready => s3_master_ready.DATAB
m2_tx_address => s1_rx_address.DATAB
m2_tx_address => s2_rx_address.DATAB
m2_tx_address => s3_rx_address.DATAB
m2_tx_data => s1_rx_data.DATAB
m2_tx_data => s2_rx_data.DATAB
m2_tx_data => s3_rx_data.DATAB
m2_rx_data <= m2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
m2_write_en => s1_write_en.DATAB
m2_write_en => s2_write_en.DATAB
m2_write_en => s3_write_en.DATAB
m2_read_en => s1_read_en.DATAB
m2_read_en => s2_read_en.DATAB
m2_read_en => s3_read_en.DATAB
m2_slave_valid <= m2_slave_valid.DB_MAX_OUTPUT_PORT_TYPE
m2_slave_ready <= m2_slave_ready.DB_MAX_OUTPUT_PORT_TYPE
m2_tx_burst_num => s1_rx_burst_num.DATAB
m2_tx_burst_num => s2_rx_burst_num.DATAB
m2_tx_burst_num => s3_rx_burst_num.DATAB
s1_clk <= s1_clk.DB_MAX_OUTPUT_PORT_TYPE
s1_rst <= s1_rst.DB_MAX_OUTPUT_PORT_TYPE
s1_master_valid <= s1_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s1_master_ready <= s1_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_address <= s1_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s1_rx_data <= s1_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s1_tx_data => m1_rx_data.DATAB
s1_tx_data => m2_rx_data.DATAB
s1_write_en <= s1_write_en.DB_MAX_OUTPUT_PORT_TYPE
s1_read_en <= s1_read_en.DB_MAX_OUTPUT_PORT_TYPE
s1_slave_valid => m1_slave_valid.DATAB
s1_slave_valid => m2_slave_valid.DATAB
s1_slave_ready => m1_slave_ready.DATAB
s1_slave_ready => m2_slave_ready.DATAB
s1_rx_burst_num <= s1_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s2_clk <= s2_clk.DB_MAX_OUTPUT_PORT_TYPE
s2_rst <= s2_rst.DB_MAX_OUTPUT_PORT_TYPE
s2_master_valid <= s2_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s2_master_ready <= s2_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_address <= s2_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s2_rx_data <= s2_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s2_tx_data => m1_rx_data.DATAB
s2_tx_data => m2_rx_data.DATAB
s2_write_en <= s2_write_en.DB_MAX_OUTPUT_PORT_TYPE
s2_read_en <= s2_read_en.DB_MAX_OUTPUT_PORT_TYPE
s2_slave_valid => m1_slave_valid.DATAB
s2_slave_valid => m2_slave_valid.DATAB
s2_slave_ready => m1_slave_ready.DATAB
s2_slave_ready => m2_slave_ready.DATAB
s2_rx_burst_num <= s2_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE
s3_clk <= s3_clk.DB_MAX_OUTPUT_PORT_TYPE
s3_rst <= s3_rst.DB_MAX_OUTPUT_PORT_TYPE
s3_master_valid <= s3_master_valid.DB_MAX_OUTPUT_PORT_TYPE
s3_master_ready <= s3_master_ready.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_address <= s3_rx_address.DB_MAX_OUTPUT_PORT_TYPE
s3_rx_data <= s3_rx_data.DB_MAX_OUTPUT_PORT_TYPE
s3_tx_data => m1_rx_data.DATAB
s3_tx_data => m2_rx_data.DATAB
s3_write_en <= s3_write_en.DB_MAX_OUTPUT_PORT_TYPE
s3_read_en <= s3_read_en.DB_MAX_OUTPUT_PORT_TYPE
s3_slave_valid => m1_slave_valid.DATAB
s3_slave_valid => m2_slave_valid.DATAB
s3_slave_ready => m1_slave_ready.DATAB
s3_slave_ready => m2_slave_ready.DATAB
s3_rx_burst_num <= s3_rx_burst_num.DB_MAX_OUTPUT_PORT_TYPE


